<<<<<<< HEAD
[{"path":"index.html","id":"course-syllabus","chapter":"Course syllabus","heading":"Course syllabus","text":"main goal course give tools ease (high-performing effcient) code development . performance side come second part, initial tools introduced also useful situations require\nimportant computation times.focus presentation development tools notion package. already familiar notion, already\nalready installed packages CRAN example ! also know standard way  distribuute code make available.\nshow package also excellent tool developing code.follow outline :Build  package useful tool code developmentBuild  package useful tool code developmentLeverage git tracking changes, GitHub sharing code, collaborative development, automating tests package broadcast companion websiteLeverage git tracking changes, GitHub sharing code, collaborative development, automating tests package broadcast companion websiteMeasure computation timeMeasure computation timeProfile codeProfile codeUse Rcpp optimize needs optimizedUse Rcpp optimize needs optimizedParallelize code easilyParallelize code easily","code":""},{"path":"index.html","id":"required-tools","chapter":"Course syllabus","heading":"Required tools","text":"take course, need following softwares installed:latest version  (https://cloud.r-project.org/)latest version  (https://cloud.r-project.org/)latest version RStudio (https://posit.co/download/rstudio-desktop/#download)latest version RStudio (https://posit.co/download/rstudio-desktop/#download)C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain detailed herea C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain detailed herethe following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe software git can installed following instructions Happy Git R Jenny Brianthe software git can installed following instructions Happy Git R Jenny BrianIn addition, need active internet connection (e.g. eduroam)NB: case sufficient admin rights computer install tools, can instead use service Posit Cloud offered Posit (company developing RStudio) signing free plan. give access remote RStudio session necessary softwares available, leaving list packages install.","code":""},{"path":"index.html","id":"prerequisites","chapter":"Course syllabus","heading":"Prerequisites","text":"able follow along training, must comfortable following concepts:programing  within RStudio IDEwriting functions control structures, particularly loopsthe calculation density multivariate Gaussian distribution","code":""},{"path":"building-an-package.html","id":"building-an-package","chapter":"1 Building an  package","heading":"1 Building an  package","text":"present efficiently create build package using RStudio IDE, devtools usethis packages.details provided reference material subject: book R packages1 Hadley Wickham & Jennifer Bryan, freely available online.","code":""},{"path":"building-an-package.html","id":"initializing-a-package","chapter":"1 Building an  package","heading":"1.1 Initializing a package","text":"simple way, built RStudio, initialize package follow steps:👉 turn (already)!create new project (top left File drop menu RStudio)create new project (top left File drop menu RStudio)choose “New Directory”choose “New Directory”choose “R package using devtools” (available, choose “R package”, difference “R package” delete unnecessary files automatically created useful)choose “R package using devtools” (available, choose “R package”, difference “R package” delete unnecessary files automatically created useful)give name package, example mypkgr.give name package, example mypkgr.NB: using Posit Cloud local computer, need rather execute following command  console: usethis::create_package(\"./\") accept proposed overwrites., get minimal structure  package, namely:DESCRIPTION file whose Title, Version, Authors@R Description edited (parts can edited even added automatically, see )DESCRIPTION file whose Title, Version, Authors@R Description edited (parts can edited even added automatically, see )NAMESPACE file later edited automatically (hands now)NAMESPACE file later edited automatically (hands now)folder R/ add .R script filesa folder R/ add .R script filesdevtools also adds three optional files:.gitignore, relative git, version control tool see detail following section git & GitHub.gitignore, relative git, version control tool see detail following section git & GitHubmypkgr.Rproj specific file RStudio, allows define characteristics preferences project just createdmypkgr.Rproj specific file RStudio, allows define characteristics preferences project just created.Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package).Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package)","code":""},{"path":"building-an-package.html","id":"adding-a-function-common-theme-example","chapter":"1 Building an  package","heading":"1.2 Adding a function: common theme example","text":"first invite code following function, use throughout course:want compute value density multivariate normal distribution \\(\\mathbb{R}^p\\) \\(n\\) points. function must applicable multivariate normal distribution (.e. mean vector \\(\\boldsymbol\\mu\\) \\(\\mathbb{R}^p\\) variance-covariance matrix \\(\\boldsymbol\\Sigma\\) order \\(p\\)), wish compute values density evaluated \\(n\\) points \\(\\mathbf{x}\\) single call function.reminder, density function multivariate Gaussian distribution :\n\\[\\displaystyle (2\\pi )^{-p/2}\\det({\\boldsymbol {\\Sigma }})^{-1/2}\\,\\exp \\left(-{\\frac {1}{2}}(\\mathbf {x} -{\\boldsymbol {\\mu }})^{\\mathsf {T}}{\\boldsymbol {\\Sigma }}^{-1}(\\mathbf {x} -{\\boldsymbol {\\mu }})\\right)\\]need create function mvnpdf() file named mvnpdf.R R/ folder package, :takes arguments:\nx matrix, \\(n\\) columns (observations) \\(p\\) rows\nmean vector means\nvarcovM variance-covariance matrix\nLog logical parameter, default value TRUE.\ntakes arguments:x matrix, \\(n\\) columns (observations) \\(p\\) rowsx matrix, \\(n\\) columns (observations) \\(p\\) rowsmean vector meansmean vector meansvarcovM variance-covariance matrixvarcovM variance-covariance matrixLog logical parameter, default value TRUE.Log logical parameter, default value TRUE.returns list containing matrix x, vector length \\(n\\) multivariate normal distribution density values points.returns list containing matrix x, vector length \\(n\\) multivariate normal distribution density values points.👉 turn !function proposal can download . ⚠️ WARNING ! click quickly link, invalidate participation class !advice writing code, see R code section Wickham & Bryan R packages (2023) Wickham & Bryan2.","code":""},{"path":"building-an-package.html","id":"documenting-a-function","chapter":"1 Building an  package","heading":"1.3 Documenting a function","text":"important properly document code. Every project least two developers:,,6 months.6 months.sake future self, favor take time document code !strongly advise use roxygen2 package document packages. main advantage help function file code defining function.👉 turn !Start inserting skeleton helper “Insert Roxygen Skeleton” located “Code” menu Magic Wand sub-menu script window.Start inserting skeleton helper “Insert Roxygen Skeleton” located “Code” menu Magic Wand sub-menu script window.Complete documentation filling :\ntitle function (first line)\ndescription function (second paragraph)\nfill third paragraph, part go “Details” section help page\nmeaning parameters\noutput, @return tag\nComplete documentation filling :title function (first line)title function (first line)description function (second paragraph)description function (second paragraph)fill third paragraph, part go “Details” section help pageif fill third paragraph, part go “Details” section help pagethe meaning parametersthe meaning parametersthe output, @return tagthe output, @return tagGenerate documentation using “Document” “” menu “Build” tab (alternatively run devtools::document() use Ctrl+Shift+D). effect command multiple:\nman folder created inside , mvnpdf.Rd file contains help information function\nNAMESPACE file modified\nGenerate documentation using “Document” “” menu “Build” tab (alternatively run devtools::document() use Ctrl+Shift+D). effect command multiple:man folder created inside , mvnpdf.Rd file contains help information functiona man folder created inside , mvnpdf.Rd file contains help information functionthe NAMESPACE file modifiedthe NAMESPACE file modifiedIn case problems curiosity done, can look proposal.details package documentation roxygen2 tags, see Object documentation section Wickham & Bryan R packages (2023)Let us finish mentioning function usethis package initializes home help page whole package:generated help page accessible, package installed, following command:","code":"\nusethis::use_package_doc()\n?mypkgr"},{"path":"building-an-package.html","id":"interactively-test-the-package","chapter":"1 Building an  package","heading":"1.4 Interactively test the package","text":"test package, load  using “Load ” (Ctrl+Shift+L) “” menu “Build” tab, alternatively devtools::load_all()).can use package directly : look function help page ?mvnpdf example execute commands given example section help page.code development, can thus:Add/Modify  codeAdd/Modify  codeRe-load package Ctrl+Shift+LRe-load package Ctrl+Shift+LExperiment consoleExperiment consoleAnd ……","code":"\n?mvndpf"},{"path":"building-an-package.html","id":"automatically-test-your-package","chapter":"1 Building an  package","heading":"1.5 Automatically test your package","text":"initialize automatic testing capabilities package, execute following command:command creates tests folder includes testthat.R file – modified – testthat/ folder add automated tests. tool based theory unit tests.example, content file, containing two tests, named test-mvnpdf.R put testthat folder (instead hand, can simply use helper function usethis::use_test() create file right place ):execute tests, can click “Test package” (Ctrl+Shift+T) “” menu “Build” tab, run devtools::test()advantage automatic tests run every time check package (see just ).good practice add unit test time bug identified fixed,\ncan immediately identify prevent error happening future.","code":"\nusethis::use_testthat()\ntest_that(\"correct result for univariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(1.96), Log=FALSE)$y, dnorm(1.96))\n  expect_equal(mvnpdf(x=matrix(c(1.96, -0.5), ncol = 2), Log=FALSE)$y,\n               dnorm(c(1.96, -0.5)))\n})\n\ntest_that(\"correct results for bivariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(rep(1.96,2), nrow=2, ncol=1), Log=FALSE)$y,\n               mvtnorm::dmvnorm(rep(1.96, 2)))\n})"},{"path":"building-an-package.html","id":"checking-your-package","chapter":"1 Building an  package","heading":"1.6 Checking your package","text":"Running check means ensuring everything package correct work expected, can installed properly various OS. “Passing R CMD CHECK” mandatory successfully uploading package CRAN.perform R CMD CHECK package, can click “Check” (Ctrl+Shift+E) “Build” tab, run devtools::check().check, automated unit tests developed previously executed. advantage written tests, don’t need worry , simply react adjust code errors returned flagged.","code":""},{"path":"building-an-package.html","id":"install-your-package","chapter":"1 Building an  package","heading":"1.7 Install your package","text":"moment, package exists environment associated RStudio project created. able use anywhere (computer)  general way, install (like CRAN package example)., click “Install” (Ctrl+Shift+B) “Build” tab, alternatively can run devtools::install().finally, can configure RStudio’s behavior time installation, simultaneously documents package: go “” menu “Build” tab, “Configure Build Tools…”. click “Configure” next “Generate documentation Roxygen”, check box “Install Restart”.","code":""},{"path":"building-an-package.html","id":"appendix-1.1-add-an-s3-method","chapter":"1 Building an  package","heading":"Appendix 1.1: add an S3 method","text":"packages, often implement called S3 methods , result object res, one can run print(res), summary(res), plot(res), …example plot() method can add package:⚠️ WARNING ! order S3 method want apply result function mvnpdf(), declare mvnpdf() returns result class mvnpdf.Test function, executing example.Don’t forget re-install package (“Install” Ctrl+Shift+B).Look contents man folder changes made NAMESPACE.proposed solution: file contains complete code mvnpdf() function associated plot() method.","code":"\n#' Plot of the mvnpdf function\n#'\n#' @param x an object of class \\code{mvnpdf} resulting from a call of\n#' \\code{mnvpdf()} function.\n#' @param ... graphical parameters passed to \\code{plot()} function.\n#'\n#' @return Nothing is returned, only a plot is given.\n#' @export\n#'\n#' @examples\n#' pdfvalues <- mvnpdf(x=matrix(seq(-3, 3, by = 0.1), nrow = 1), Log=FALSE)\n#' plot(pdfvalues)\nplot.mvnpdf <- function(x, ...) {\n  plot(x$x, x$y, type = \"l\", ...)\n}"},{"path":"building-an-package.html","id":"appendix-1.2-submit-ones-package-on-cran","chapter":"1 Building an  package","heading":"Appendix 1.2: submit one’s package on CRAN","text":"Run two following commands: devtools::check() followed devtools::submit_cran().\ndetails, see Wickham & Bryan’s recommended pipeline book R packages","code":""},{"path":"version-control-with-git-and-github.html","id":"version-control-with-git-and-github","chapter":"2 Version control with git and GitHub","heading":"2 Version control with git and GitHub","text":"interested solutions offered RStudio GitHub hosting version control projects. allows monitor changes history, help collaborative development facilitate continuous integration.","code":""},{"path":"version-control-with-git-and-github.html","id":"principles-of-version-control","chapter":"2 Version control with git and GitHub","heading":"2.1 Principles of version control","text":"principle version control record successive changes made files (especially .R files case).RStudio offers 2 integrated solutions version control:gitgitsvn (“subversion”)svn (“subversion”)","code":""},{"path":"version-control-with-git-and-github.html","id":"git","chapter":"2 Version control with git and GitHub","heading":"2.1.1 git","text":"git version control software (.e. tool record history successive changes code allow share changes people). git command line program, necessarily intuitive use.git works follows: remote server (e.g. cloud), updated version code available. time possible access version code online. contributor can download last updated version (action called pull), editing locally. changes made locally, contributor can update online version code, changes become available everyone (action called push).NB: git designed lightweight files (text files) far optimized heavy /compressed files (e.g. .RData files).","code":""},{"path":"version-control-with-git-and-github.html","id":"subversion","chapter":"2 Version control with git and GitHub","heading":"2.1.2 subversion","text":"subversion solution available RStudio. works similar way git, less features won’t detail (major difference contributors work simultaneously version code).","code":""},{"path":"version-control-with-git-and-github.html","id":"use-git-locally-within-rstudio","chapter":"2 Version control with git and GitHub","heading":"2.2 Use git locally within RStudio","text":"👉 turn !Start enabling git “Git/SVN” tab “Project Options” located “Tools” menu follow instructions. can also use usethis::use_git().Start enabling git “Git/SVN” tab “Project Options” located “Tools” menu follow instructions. can also use usethis::use_git().“Git” tab now appears next “Build” tab,\nregister current state package making first commit:“Git” tab now appears next “Build” tab,\nregister current state package making first commit:2a. Select files track (select .Rproj file)2a. Select files track (select .Rproj file)2b. write informative message (collaborators – includes future self)2b. write informative message (collaborators – includes future self)2c. click “Commit”2c. click “Commit”Add “*.Rproj” line “.gitignore” file make new commitAdd “*.Rproj” line “.gitignore” file make new commitVisualize changes history using visualization tools\n“Diff” “History” tools accessible “Git” tabVisualize changes history using visualization tools\n“Diff” “History” tools accessible “Git” tab","code":""},{"path":"version-control-with-git-and-github.html","id":"good-commit-practices","chapter":"2 Version control with git and GitHub","heading":"2.2.1 Good commit practices","text":"Ideally, commit solve one problem. fix entirety (complete), contain changes related problem (minimal). especially useful write informative commit messages (kind help collaborators, includes future self). also concise, describe reasons changes rather changes (visible Diff).NB: sometimes difficult follow guidelines letter, merely ideal guide. certainly prevent regularly making commits.hand, temptation “clean” tidy change-history natural, source unnecessary problems. contradicts traceability goal version control. Since code development generally complex, messy, non-linear intellectual process, normal recording changes reflects path. practice, future self first user change history, priority make easier future solving bugs extending functionality.","code":""},{"path":"version-control-with-git-and-github.html","id":"github","chapter":"2 Version control with git and GitHub","heading":"2.3 GitHub","text":"GitHub website offering online code hosting solution, based git. many alternative websites services (GitLab, Bitbucket, …) allowing host code also based git. GitHub popular  community, relatively easy use, even novice user.Advantages using GitHub:simple user-friendly graphical interface track history changes codea simple user-friendly graphical interface track history changes codethe latest development version code available online can reference (can even reference specific commit number freeze specific version code)latest development version code available online can reference (can even reference specific commit number freeze specific version code)users clear transparent channel report bugs/difficultiesusers clear transparent channel report bugs/difficultiesit greatly facilitates collaborative developmentit greatly facilitates collaborative development","code":""},{"path":"version-control-with-git-and-github.html","id":"upload-ones-package-onto-github","chapter":"2 Version control with git and GitHub","heading":"2.3.1 Upload one’s package  onto GitHub","text":"👉 turn !Go https://github.com/ create GitHub account (hesitate, common convention use firstnamelastname username)Run usethis::use_github()  console follow instructions.Add README.Rmd file package order nice home page GitHub:\n3a. RStudio, run command usethis::use_readme_rmd()\n3b. using “Diff” tool “Git” tab RStudio, review changes made previous command\n3c. edit created README.Rmd file, create corresponding README.md file running knitr (click wool ball “Knit” top left RStudio), making 3rd commit containing changes\n3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click “Push” “Git” tab. Now, changes 3rd commit visible online GitHub.\n3a. RStudio, run command usethis::use_readme_rmd()3b. using “Diff” tool “Git” tab RStudio, review changes made previous command3c. edit created README.Rmd file, create corresponding README.md file running knitr (click wool ball “Knit” top left RStudio), making 3rd commit containing changes3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click “Push” “Git” tab. Now, changes 3rd commit visible online GitHub.","code":""},{"path":"version-control-with-git-and-github.html","id":"collaborative-code-production","chapter":"2 Version control with git and GitHub","heading":"2.4 Collaborative code production","text":"git GitHub particularly useful efficient several people collaborate develop code together. Indeed, everyone can pull push successive changes code, simultaneously, endusing always working latest version code. see different concepts useful case collaborative work.👉 turn !pairing-another participant, add new buddy “collaborator” GitHub directory “Settings” tab GitHub.pairing-another participant, add new buddy “collaborator” GitHub directory “Settings” tab GitHub.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.RStudio, create new project form git using https url buddy’s project.RStudio, create new project form git using https url buddy’s project.","code":""},{"path":"version-control-with-git-and-github.html","id":"branches","chapter":"2 Version control with git and GitHub","heading":"2.4.1 Branches","text":"useful features git branches. allows make important changes changes code without disrupting current operation. particularly useful explore development path don’t know successful end.way, already using branches since beginning part. Indeed, default branch called “main” (sometimes “master”).Thanks system branches, obtain tree different commits time (nodes correspond separation branches).","code":""},{"path":"version-control-with-git-and-github.html","id":"merge","chapter":"2 Version control with git and GitHub","heading":"2.4.2 Merge","text":"-called “pull” can decomposed 2 actions made git:first fetch, corresponds downloading online codefirst fetch, corresponds downloading online codeimmediately followed merge, merges local version downloaded changes.immediately followed merge, merges local version downloaded changes.conducting experimental development one branch one may want merge changes “master” branch example, experiment proved successful.changes concern separate parts code, merging can done without problem. hand, two versions merged contain changes concern lines code since last common commit , encounter one () conflicts, manually resolved.","code":""},{"path":"version-control-with-git-and-github.html","id":"conflicts","chapter":"2 Version control with git and GitHub","heading":"2.4.3 Conflicts","text":"Let’s take following example: developer \\(D_1\\) developer \\(D_2\\) pulled version v0.1 code time \\(t\\) respective machines. work independently make changes code. pushing /changes, developer \\(D_2\\) receives error message:\"Sync Error.Please resolve conflicted files, commit, try syncing .\"Chaque fichier étant source de conflit alors été automatiquement édité comme suit :order solve conflict, manually carefully edit file one one, choosing whether keep local online version code, can commit , finally successfully push changes online.👉 turn !Edit README.Rmd file paired buddy, commit change, finally push .Edit README.Rmd file paired buddy, commit change, finally push .buddy modified README.Rmd modify file line (make sure discussing together), **WITHOUT* pulling buddy’s changes first! Commit try push changes.buddy modified README.Rmd modify file line (make sure discussing together), **WITHOUT* pulling buddy’s changes first! Commit try push changes.Resolve conflict.Resolve conflict.NB: real life want avoid situation always pull pushing, purposedly opposite sake providing example demystifying conflicts.","code":"<<<<<<< HEAD\nlocal code\n=======\nonline code\n>>>>>>> remote"},{"path":"version-control-with-git-and-github.html","id":"fork","chapter":"2 Version control with git and GitHub","heading":"2.4.4 Fork","text":"fork allows create copy available code repository. Thus original code impacted changes. like creating branch, severing tree, can assume ownership . also called “cutting” continue metaphor…action mainly useful pull requests (see next).","code":""},{"path":"version-control-with-git-and-github.html","id":"pull-request","chapter":"2 Version control with git and GitHub","heading":"2.4.5 Pull request","text":"Pull requests easiest way propose changes code project contributor . GitHub provides graphical interface makes easy .👉 turn !Modify README.Rmd neighbor paired-buddy forking package.Modify README.Rmd neighbor paired-buddy forking package.Propose change form pull request GitHub repository webpage (“Pull request”s tab).Propose change form pull request GitHub repository webpage (“Pull request”s tab).Accept neighbor pull request repository GitHub website, merge .Accept neighbor pull request repository GitHub website, merge .","code":""},{"path":"version-control-with-git-and-github.html","id":"issues","chapter":"2 Version control with git and GitHub","heading":"2.4.6 Issues","text":"GitHub repository, can post comment, form issue, alert developers possible bug (providing minimally reproducible example bug), question use package, ask additional feature…Ideally, propose pull request solves issue can (.e. ability time).👉 turn !Use usethis::use_github_links() add following 2 lines package DESCRIPTION file:URL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesUse usethis::use_github_links() add following 2 lines package DESCRIPTION file:URL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesView new changes, commit .View new changes, commit .Create issue paired buddy’s projectCreate issue paired buddy’s project","code":""},{"path":"version-control-with-git-and-github.html","id":"continuous-integration-ci","chapter":"2 Version control with git and GitHub","heading":"2.5 Continuous Integration (CI)","text":"change, commit, possibility introduce 1 () bugs prevent package passing CRAN R CMD CHECK. accumulate many bugs, time submitting new version CRAN many corrections make. even frustrating package passed R CMD CHECK …Continuous integration services allow check test package automatically commit ! case failure, receive email informing . number services offer (limited) free package open-source projects.Another reason use continuous integration allows test package different infrastructures (e.g. Windows, Ubuntu, Mac OS) different versions  (current, devel…)","code":""},{"path":"version-control-with-git-and-github.html","id":"github-actions","chapter":"2 Version control with git and GitHub","heading":"2.5.1 GitHub Actions","text":"GitHub Actions let launch “actions” automatically, every time push GitHub. usethis::use_github_action(\"check-standard\") command allows initialize Github Actions add R CMD CHECK action package.👉 turn !Run command usethis::use_github_action(\"check-standard\"), commit push changes. See happens GitHub webpage “Actions” tab.Run command usethis::use_github_action(\"check-standard\"), commit push changes. See happens GitHub webpage “Actions” tab.Add badge README.Rmd (nott forget knit ) code obtained console commit (push) changes.Add badge README.Rmd (nott forget knit ) code obtained console commit (push) changes.look following webpage informs different GitHub Actions available  packages: https://github.com/r-lib/actions/blob/v2-branch/examples/README.md","code":""},{"path":"version-control-with-git-and-github.html","id":"build-and-deploy-a-companion-website-for-ones-package","chapter":"2 Version control with git and GitHub","heading":"2.6 Build and deploy a companion website for one’s package","text":"pkgdown  package automatically generate nice website gathering documentation package (including Vignettes).👉 À vous de jouer !Executer la commande usethis::use_pkgdown() dans la console .Executer la commande usethis::use_pkgdown() dans la console .Commiter et pusher les changements. Rendez-vous sur l’onglet Actions de votre répertoire sur GitHub et constater les nouveautés.Commiter et pusher les changements. Rendez-vous sur l’onglet Actions de votre répertoire sur GitHub et constater les nouveautés.👉 À vous de jouer !Examiner les changement du fichier DESCRIPTION suite à l’execution des différentes commandes usethis::use_... précedemment.Modifier le champ URL du fichier DESCRIPTION.","code":""},{"path":"version-control-with-git-and-github.html","id":"additional-references","chapter":"2 Version control with git and GitHub","heading":"2.7 Additional References","text":"Happy Git R Jenny Bryan.Happy Git R Jenny Bryan.Jennifer Bryan (2018). Excuse , Moment Talk Version Control? American Statistician 72 (1):20–27.DOI: 10.1080/00031305.2017.1399928Jennifer Bryan (2018). Excuse , Moment Talk Version Control? American Statistician 72 (1):20–27.DOI: 10.1080/00031305.2017.1399928","code":""},{"path":"version-control-with-git-and-github.html","id":"appendix-2.1-r-hub","chapter":"2 Version control with git and GitHub","heading":"Appendix 2.1: R-hub","text":"R consortium provides R-hub builder, ambition one day provide continuous integration service especially dedicated  packages.advantage use exact infrastructure CRAN make check package foolproof. can use devtools::check_rhub() function.","code":""},{"path":"version-control-with-git-and-github.html","id":"appendix-2.2-code-coverage","chapter":"2 Version control with git and GitHub","heading":"Appendix 2.2: Code coverage","text":"covr package proposes solution measure coverage unit tests associated package. test coverage determines proportion source code actually used execution unit tests. Measuring coverage code reinforces reliability code gives confidence potential users.👉 turn !Run command usethis::use_coverage(), add nice badge README.md code got R consoleCommit push changes.information feel free look covr vignette.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-and-comparing-execution-times","chapter":"3 Measuring and comparing execution times","heading":"3 Measuring and comparing execution times","text":"first step optimizing code measure execution time, order compare timings different implementations.section following refer book Advanced R Hadley Wickham 3, freely available online.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-execution-times-with-system.time","chapter":"3 Measuring and comparing execution times","heading":"3.1 Measuring execution times with system.time()","text":"measure execution time  command, can use native system.time() function like :problem appears example execution fast system.time() displays 0 (close value) impossible compare hopefully faster implementation. Also, see variability run command several times.Thus want compare code mvtnorm::dmvnorm() function, can’t use system.time():imagine need increase complexity calculation able compare , actually better way: use microbenchmark package !","code":"\nobs <- matrix(rep(1.96, 2), nrow=2, ncol=1)\nsystem.time(mvnpdf(x=obs, Log=FALSE))## utilisateur     système      écoulé \n##       0.002       0.001       0.002\nobs <- rep(1.96, 2)\nsystem.time(mvtnorm::dmvnorm(obs))## utilisateur     système      écoulé \n##       0.005       0.000       0.005"},{"path":"measuring-and-comparing-execution-times.html","id":"compare-execution-times-with-microbenchmark","chapter":"3 Measuring and comparing execution times","heading":"3.2 Compare execution times with microbenchmark()","text":"name indicates, package allows compare execution times even fast. Moreover, benchmarked expression repeatedly evaluated certain number times, thus stabilizing timing estimations.mvnpdf() dmnvorm() functions able take matrix input, can also compare speeds setting:Something happened… find exactly causing issue comes next.","code":"\nlibrary(microbenchmark)\nmb <- microbenchmark(mvtnorm::dmvnorm(rep(1.96, 2)),\n                     mvnpdf(x = matrix(rep(1.96,2)), Log = FALSE),\n                     times = 1000)\nmb## Unit: microseconds\n##                                           expr    min      lq     mean  median\n##                 mvtnorm::dmvnorm(rep(1.96, 2)) 39.466 42.1890 46.95151 43.9365\n##  mvnpdf(x = matrix(rep(1.96, 2)), Log = FALSE) 34.339 37.6035 44.31690 39.5895\n##       uq      max neval cld\n##  46.1665  157.958  1000   a\n##  41.5375 2385.989  1000   a\nn <- 100\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), \n                            Log=FALSE),\n                     times=100)\nmb## Unit: microseconds\n##                                                       expr     min      lq\n##         mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))  44.259  48.869\n##  mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 442.201 451.778\n##       mean   median       uq     max neval cld\n##   64.25967  55.8515  65.1660 169.844   100  a \n##  507.42668 459.8520 505.9615 999.407   100   b"},{"path":"profiling-code.html","id":"profiling-code","chapter":"4 Profiling code","heading":"4 Profiling code","text":"Profiling determining part code take time compute (also memory-wise). found block code takes longest time execute, goal optimize small part code.get profiling code , select lines code interest go “Profile” menu “Profile Selected Lines”. uses package profvis, particular profvis() function.OK, OK, get ! Concatenating vector go loop really good idea.","code":"\nn <- 10e4\npdfval <- mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)"},{"path":"profiling-code.html","id":"comparison-with-an-improved-implementtation-of-mnvpdf.","chapter":"4 Profiling code","heading":"4.1 Comparison with an improved implementtation of mnvpdf().","text":"Consider new version mvnpdf(), called mvnpdfsmart(). Download file, include package.Now profile following command:indeed removed main computational bottleneck, can now learn detailed way takes time function.confirm mvnpdfsmart() indeed much faster mvnpdf() can make comparison using microbenchmark():can also check whether mvnpdfsmart() becomes competitive dmvnorm():still work done…","code":"\nn <- 10e4\npdfval <- mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)\nn <- 1000\nmb <- microbenchmark(mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE),\n                     mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n),\n                                 Log = FALSE),\n                     times=100L)\nmb## Unit: milliseconds\n##                                                            expr     min\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 5.02209\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3.84281\n##        lq     mean   median       uq       max neval cld\n##  5.197294 5.986764 5.403103 5.688332 14.792105   100  a \n##  3.947323 4.203831 4.042284 4.337809  9.949835   100   b\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   74.147\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 4957.692\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3836.898\n##         lq      mean   median        uq       max neval cld\n##   105.0425  149.0475  146.794  171.0065   284.200   100 a  \n##  5158.0640 6370.4311 5499.013 6129.4985 21644.571   100  b \n##  3939.7715 4638.1753 4058.396 4608.7010  9187.184   100   c"},{"path":"profiling-code.html","id":"comparison-with-an-optimized-pure-implementation","chapter":"4 Profiling code","heading":"4.2 Comparison with an optimized pure  implementation","text":"several research, tests, trials errors, Boris arrived optimized version using  capabilities.Include mvnpdfoptim() function package, profile :microbenchmark() goes :Finally, can profile dmvnorm() function:","code":"\nn <- 10e4\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE))\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   72.128\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 5006.337\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3823.937\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2952.059\n##         lq      mean   median       uq       max neval  cld\n##    93.0675  130.1618  132.216  159.599   225.919   100 a   \n##  5160.5405 5788.4302 5292.387 5703.484 11656.323   100  b  \n##  3923.3830 4166.5395 4088.013 4408.648  5091.953   100   c \n##  3082.9840 3390.7718 3155.799 3429.753  8614.971   100    d\nn <- 10e5\nlibrary(mvtnorm)\nprofvis::profvis(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)))"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"rcpp-or-how-to-easily-embed-c-code-into-a-package","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5 Rcpp or how to easily embed C++ code into a  package","text":"Rcpp (“R-C-Plus-Plus”) package facilitates interface C++ .  interpreted language, feature makes number things easy (including giving us access console can evaluate code variables fly). Nevertheless, ease use counterbalanced larger computation times comapred lower level languages C, Fortran C++ (require compilation).curious reader directed towards online book Rcpp everyone Masaki E. Tsuda, thorough complete resource understanding use Rcpp, complement introduction can found “Rcpp” section Hadley Wickham’s book Advanced R4.","code":""},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"first-function-in-rcpp","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.1 First function in Rcpp","text":"👉 turn !make package ready use Rcpp, start running following command:See changes madeYou also add following 2 Roxygen comments general help page package, indicated console:now going create first function Rcpp invert matrix. , use C++ library Armadillo. modern simple linear algebra library, highly optimized, interfaced  via RcppArmadillo package.C++ different language . main differences impact us:C++ efficient loops (including nested loops – ⚠️ often one order faster , due way C++ allocates walks memory).C++ efficient loops (including nested loops – ⚠️ often one order faster , due way C++ allocates walks memory).command must end semicolon ;.command must end semicolon ;.C++ typed language: must declare type variable can use code.C++ typed language: must declare type variable can use code.👉 turn !Create new C++ file RStudio (via File > New File > C++ File menu), save src folder. Take time read try understand line.Compile load package (via “Install Restart” button) try using timesTwo() function console.Install RcppArmadillo 👉 package, don’t forget make necessary additions DESCRIPTION (use usethis::use_rcpp_armadillo())Using Hadley Wickham’s introduction Rcpp book Advanced R, well documentation RcppArmadillo package C++ library Armadillo, try write short function invC() C++ computes inverse matrix.successfully compiled invC function accessible , create mvnpdf_invC() function mvnpdfsmart implementation replacing matrix inverse calculations call invC.Evaluate performance gain new implementation mvnpdf_invC.","code":"```r\nusethis::use_rcpp()\n``````r\n#' @useDynLib mypkgr\n#' @importFrom Rcpp sourceCpp, .registration = TRUE\nNULL\n```\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb\n## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   76.365\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 5017.494\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3867.414\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2988.750\n##  mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3852.948\n##        lq      mean    median       uq       max neval  cld\n##   106.939  148.3943  141.0155  166.461   657.817   100 a   \n##  5200.398 5720.7256 5370.9350 5682.860 11177.003   100  b  \n##  3957.365 4221.3701 4047.9005 4291.192  8912.449   100   c \n##  3087.624 3528.4104 3169.8655 3361.721 13262.437   100    d\n##  3959.793 4329.0708 4119.1915 4403.047  8632.090   100   c\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, \n    nrow = 2, ncol = 1000), Log=FALSE))## Error in parse_rprof_lines(lines, expr_source): No parsing data available. Maybe your function was too fast?\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, \n    nrow = 100, ncol = 1000), Log=FALSE))"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"optimize-thanks-to-c","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.2 Optimize thanks to C++","text":"general rule, much computational time gained replacing optimized  function C++ function. Indeed, base  functions fact already wrappers around well optimized C Fortran routines. gain limited suppression argument checking type management (reason!).👉 turn !mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfsmartC().mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfsmartC().Evaluate performance gain new implementation mvnpdfsmartC.Evaluate performance gain new implementation mvnpdfsmartC.can download proposal mvnpdfsmartC.cpp .(relatively small) additional speed gain (cost code readability!), can look optimized Armadillo C++ implementation mvnpdfoptimC.cpp.Note Rcpp functions can used outside package architecture thanks Rcpp::sourceCpp() function. , seen always desirable manage one’s code inside package, unlikely need !","code":"\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmartC(x=matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2), varcovM = diag(2), Log=FALSE),\n                     mvnpdfoptimC(x=matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2), varcovM = diag(2), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                                                                       expr\n##                                                         mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))\n##                                                  mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##  mvnpdfsmartC(x = matrix(1.96, nrow = 2, ncol = n), mean = rep(0,      2), varcovM = diag(2), Log = FALSE)\n##  mvnpdfoptimC(x = matrix(1.96, nrow = 2, ncol = n), mean = rep(0,      2), varcovM = diag(2), Log = FALSE)\n##       min       lq       mean    median        uq       max neval  cld\n##    80.893  124.718  161.62013  158.2770  185.7550   353.100   100 a   \n##  5113.140 5298.702 6207.60361 5863.7540 7020.2965 12770.362   100  b  \n##  3877.362 4086.082 4869.72167 4518.8670 5617.8060  8710.666   100   c \n##  3004.412 3175.044 4124.98573 3795.2545 4640.0385 11348.141   100    d\n##  3835.925 4113.387 5139.89492 4851.1930 5645.2245 11929.288   100   c \n##    86.434  105.377  214.62157  125.5855  141.0735  3338.051   100 a   \n##    35.932   54.212   73.79782   65.2630   78.5620   544.542   100 a"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"annexe-5.1-premature-optimization-is-a-bad-idea","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"Annexe 5.1: premature optimization is a bad idea","text":"Chambers, Software Data Analysis: Programming R, Springer, 2008:“Including additional C code serious step, added dangers often substantial amount programming debugging required. good reason.”","code":""},{"path":"r-code-parallelization.html","id":"r-code-parallelization","chapter":"6 R code Parallelization","heading":"6 R code Parallelization","text":"","code":""},{"path":"r-code-parallelization.html","id":"introduction-to-parallel-execution-in","chapter":"6 R code Parallelization","heading":"6.1 Introduction to parallel execution in ","text":"Apart optimizing code algorithms, another way get high performing code take advantage parallel architectures modern computers. goal parallelize one’s code order perform simultaneous operations distinct parts problem, using different computing cores. reduce total computation time needed, set operations executed faster, resulting overall user speed-.significant number algorithms -called “embarrassingly parallel”, .e. whose computations can broken several independent sub-computations. statistics, often easy straightforward parallelize according different observations different dimensions. Typically, operations can written form loop whose operations independent one iteration next.necessary operations execute code parallel follows:Start \\(m\\) “worker” processes (.e. computing cores) initialize themStart \\(m\\) “worker” processes (.e. computing cores) initialize themSend necessary functions data task workersSend necessary functions data task workersSplit tasks \\(m\\) operations similar size send workersSplit tasks \\(m\\) operations similar size send workersWait workers finish calculationsWait workers finish calculationsCollect results different workersCollect results different workersStop worker processesStop worker processesDepending platform, several communication protocols available cores. UNIX systems, Fork protocol used, available Windows PSOCK protocol used instead. Finally, distributed computing architecture cores necessarily physical processor, MPI protocol generally used. advantage future future.apply package code can executed whatever hardware configuration.Since R 2.14.0, parallel package directly included  allows start stop cluster several worker processes (step 1 6). addition parallel package, use future package allows manage worker processes communication articulation future.apply package, turn allows manage dialogue workers (sending, receiving collecting results – steps 2, 3, 4 5).","code":""},{"path":"r-code-parallelization.html","id":"first-parallel-function","chapter":"6 R code Parallelization","heading":"6.2 First  parallel function","text":"👉 turn !Start writing simple function computes logarithm \\(n\\) numbers:Determine many cores available computer function future::availableCores().Determine many cores available computer function future::availableCores().Using function future::plan(multisession(workers = XX)), declare “plan” parallel computations computer (taking care always leave least one core available handle processes).Using function future::plan(multisession(workers = XX)), declare “plan” parallel computations computer (taking care always leave least one core available handle processes).Using one *apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Using one *apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)parallel version runs much slower… fact, individual tasks fast,  spend time communicating cores actual computations.loop iteration must relatively long parallel computing provide significant gain computation time!increasing \\(n\\), observe reduction difference 2 implementations (parallel computation time increases slowly compared increase sequential function).","code":"\nlibrary(microbenchmark)\nlibrary(future.apply)\n\nlog_seq <- function(x){\n  # try this yourself (spoiler alert: it is quite long...):\n  # res <- numeric(length(x))\n  # for(i in 1:length(x)){\n  #   res[i] <- log(x[i])\n  # }\n  # return(res)\n  return(log(x))\n}\n\nlog_par <- function(x){\n  res <- future_sapply(1:length(x), FUN = function(i) {\n    log(x[i])\n  })\n  return(res)\n}\n\nplan(multisession(workers = 3))\nmb <- microbenchmark(log_par(1:100), log_seq(1:100), times = 50)"},{"path":"r-code-parallelization.html","id":"efficient-parallelization","chapter":"6 R code Parallelization","heading":"6.3 Efficient parallelization","text":"now look another use case. Let’s say large array data 10 observations 100,000 variables (e.g. genetic measurements), want compute median variables.experienced  user, operation easily implemented using apply():reality, (good) loop slower – provided nicely programmed:👉 turn !\nTry improve computation time parallelizing code 100,000 variables. gain computation time?","code":"\nx <- matrix(rnorm(1e6), nrow = 10)\ndim(x)## [1]     10 100000\ncolmedian_apply <- function(x){\n  return(apply(x, 2, median))\n}\nsystem.time(colmedian_apply(x))## utilisateur     système      écoulé \n##       3.101       0.000       3.101\ncolmedian_for <- function(x){\n  ans <- rep(0, ncol(x)) \n  for (i in 1:ncol(x)) {\n    ans[i] <- median(x[, i]) \n  }\n  return(ans)\n}\nsystem.time(colmedian_for(x))## utilisateur     système      écoulé \n##       2.769       0.000       2.769\ncolmedian_par <- function(x){\n  res <- future_sapply(1:ncol(x), FUN = function(i) {\n          median(x[, i])\n    })\n  return(res)\n}\nplan(multisession(workers = 3))\nsystem.time(colmedian_par(x))## utilisateur     système      écoulé \n##       0.329       0.017       2.096\nmb <- microbenchmark(colmedian_apply(x), \n                     colmedian_for(x),\n                     colmedian_par(x), \n                     times = 10)\nmb## Unit: seconds\n##                expr      min       lq     mean   median       uq      max neval\n##  colmedian_apply(x) 2.754920 2.851908 2.988178 2.946747 3.060395 3.386364    10\n##    colmedian_for(x) 2.782954 2.824968 2.963616 2.952263 3.023186 3.355388    10\n##    colmedian_par(x) 1.911639 1.935168 2.017947 2.045730 2.079367 2.113270    10\n##  cld\n##   a \n##   a \n##    b"},{"path":"r-code-parallelization.html","id":"other-plans-for-parallel-computations","chapter":"6 R code Parallelization","heading":"6.3.1 Other “plans” for parallel computations","text":"run code (exactly code, one advantages future* family packages), need set “plan” computations:computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.HPC cluster (like CURTA Bordeaux), refer package future.batchtoolson HPC cluster (like CURTA Bordeaux), refer package future.batchtools","code":""},{"path":"r-code-parallelization.html","id":"parallelization-in-our-common-theme-example","chapter":"6 R code Parallelization","heading":"6.4 Parallelization in our common theme example","text":"👉 turn !function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))Compare execution times 10 000 observationsCompare execution times 10 000 observationsYou can download proposed implementation mvnpdfoptim_par .","code":"\nplan(multisession(workers = 3))\nn <- 10000\nmb <- microbenchmark::microbenchmark(\n  mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n  mypkgr::mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  mypkgr::mvnpdfoptim_par(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  times=20)\nmb## Unit: microseconds\n##                                                                             expr\n##                               mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))\n##           mypkgr::mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##  mypkgr::mvnpdfoptim_par(x = matrix(1.96, nrow = 2, ncol = n),      Log = FALSE)\n##         min          lq        mean     median         uq        max neval cld\n##     323.662    411.3535    981.5231   1022.973   1447.661   2200.017    20 a  \n##   30055.891  32798.9945  48885.9624  48639.878  61220.791  77604.554    20  b \n##  201756.616 217626.2070 264482.2767 254882.458 283593.100 490596.217    20   c"},{"path":"r-code-parallelization.html","id":"conclusion","chapter":"6 R code Parallelization","heading":"6.5 Conclusion","text":"Parallel computation saves time, first optimize code. parallelizing code, gain execution time depends ratio communication time effective computation time task.","code":""},{"path":"take-home-messages.html","id":"take-home-messages","chapter":"7 Take-home message(s)","heading":"7 Take-home message(s)","text":"MAKE PACKAGES!MAKE PACKAGES!use git, least locally yourselfuse git, least locally yourselfif needed (.e. optimization  code ), afraid using Rcpp /parallelizing codeif needed (.e. optimization  code ), afraid using Rcpp /parallelizing code","code":""},{"path":"further-reading.html","id":"further-reading","chapter":"Further reading","heading":"Further reading","text":"Hadley Wickham’s online books truly excellent contain lot supplementary information covered training:\nwebsite writing packages R packages.\nwebsite Advanced R everything regarding optimization, Rcpp, parallel computing.\nwebsite R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.\nHadley Wickham’s online books truly excellent contain lot supplementary information covered training:website writing packages R packages.website writing packages R packages.website Advanced R everything regarding optimization, Rcpp, parallel computing.website Advanced R everything regarding optimization, Rcpp, parallel computing.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.online book Rcpp everyone Masaki E. Tsuda also good.online book Rcpp everyone Masaki E. Tsuda also good.","code":""}]
=======
[{"path":"index.html","id":"course-syllabus","chapter":"Course syllabus","heading":"Course syllabus","text":"main goal course give tools ease (high-performing effcient) code development . performance side come second part, initial tools introduced also useful situations require\nimportant computation times.focus presentation development tools notion package. already familiar notion, already\nalready installed packages CRAN example ! also know standard way  distribuute code make available.\nshow package also excellent tool developing code.follow outline :Build  package useful tool code developmentBuild  package useful tool code developmentLeverage git tracking changes, GitHub sharing code, collaborative development, automating tests package broadcast companion websiteLeverage git tracking changes, GitHub sharing code, collaborative development, automating tests package broadcast companion websiteMeasure computation timeMeasure computation timeProfile codeProfile codeUse Rcpp optimize needs optimizedUse Rcpp optimize needs optimizedParallelize code easilyParallelize code easily","code":""},{"path":"index.html","id":"required-tools","chapter":"Course syllabus","heading":"Required tools","text":"take course, need following softwares installed:latest version  (https://cloud.r-project.org/)latest version  (https://cloud.r-project.org/)latest version RStudio (https://posit.co/download/rstudio-desktop/#download)latest version RStudio (https://posit.co/download/rstudio-desktop/#download)C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain detailed herea C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain detailed herethe following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe software git can installed following instructions Happy Git R Jenny Brianthe software git can installed following instructions Happy Git R Jenny BrianIn addition, need active internet connection (e.g. eduroam)NB: case sufficient admin rights computer install tools, can instead use service Posit Cloud offered Posit (company developing RStudio) signing free plan. give access remote RStudio session necessary softwares available, leaving list packages install.","code":""},{"path":"index.html","id":"prerequisites","chapter":"Course syllabus","heading":"Prerequisites","text":"able follow along training, must comfortable following concepts:programing  within RStudio IDEwriting functions control structures, particularly loopsthe calculation density multivariate Gaussian distribution","code":""},{"path":"building-an-package.html","id":"building-an-package","chapter":"1 Building an  package","heading":"1 Building an  package","text":"present efficiently create build package using RStudio IDE, devtools usethis packages.details provided reference material subject: book R packages1 Hadley Wickham & Jennifer Bryan, freely available online.","code":""},{"path":"building-an-package.html","id":"initializing-a-package","chapter":"1 Building an  package","heading":"1.1 Initializing a package","text":"simple way, built RStudio, initialize package follow steps:👉 turn (already)!create new project (top left File drop menu RStudio)create new project (top left File drop menu RStudio)choose “New Directory”choose “New Directory”choose “R package using devtools” (available, choose “R package”, difference “R package” delete unnecessary files automatically created useful)choose “R package using devtools” (available, choose “R package”, difference “R package” delete unnecessary files automatically created useful)give name package, example mypkgr.give name package, example mypkgr.NB: using Posit Cloud local computer, need rather execute following command  console: usethis::create_package(\".\") accept proposed overwrites., get minimal structure  package, namely:DESCRIPTION file whose Title, Version, Authors@R Description edited (parts can edited even added automatically, see )DESCRIPTION file whose Title, Version, Authors@R Description edited (parts can edited even added automatically, see )NAMESPACE file later edited automatically (hands now)NAMESPACE file later edited automatically (hands now)folder R/ add .R script filesa folder R/ add .R script filesdevtools also adds three optional files:.gitignore, relative git, version control tool see detail following section git & GitHub.gitignore, relative git, version control tool see detail following section git & GitHubmypkgr.Rproj specific file RStudio, allows define characteristics preferences project just createdmypkgr.Rproj specific file RStudio, allows define characteristics preferences project just created.Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package).Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package)","code":""},{"path":"building-an-package.html","id":"adding-a-function-common-theme-example","chapter":"1 Building an  package","heading":"1.2 Adding a function: common theme example","text":"first invite code following function, use throughout course:want compute value density multivariate normal distribution \\(\\mathbb{R}^p\\) \\(n\\) points. function must applicable multivariate normal distribution (.e. mean vector \\(\\boldsymbol\\mu\\) \\(\\mathbb{R}^p\\) variance-covariance matrix \\(\\boldsymbol\\Sigma\\) order \\(p\\)), wish compute values density evaluated \\(n\\) points \\(\\mathbf{x}\\) single call function.reminder, density function multivariate Gaussian distribution :\n\\[\\displaystyle (2\\pi )^{-p/2}\\det({\\boldsymbol {\\Sigma }})^{-1/2}\\,\\exp \\left(-{\\frac {1}{2}}(\\mathbf {x} -{\\boldsymbol {\\mu }})^{\\mathsf {T}}{\\boldsymbol {\\Sigma }}^{-1}(\\mathbf {x} -{\\boldsymbol {\\mu }})\\right)\\]need create function mvnpdf() file named mvnpdf.R R/ folder package, :takes arguments:\nx matrix, \\(n\\) columns (observations) \\(p\\) rows\nmean vector means\nvarcovM variance-covariance matrix\nLog logical parameter, default value TRUE.\ntakes arguments:x matrix, \\(n\\) columns (observations) \\(p\\) rowsx matrix, \\(n\\) columns (observations) \\(p\\) rowsmean vector meansmean vector meansvarcovM variance-covariance matrixvarcovM variance-covariance matrixLog logical parameter, default value TRUE.Log logical parameter, default value TRUE.returns list containing matrix x, vector length \\(n\\) multivariate normal distribution density values points.returns list containing matrix x, vector length \\(n\\) multivariate normal distribution density values points.👉 turn !function proposal can download . ⚠️ WARNING ! click quickly link, invalidate participation class !advice writing code, see R code section Wickham & Bryan R packages (2023) Wickham & Bryan2.","code":""},{"path":"building-an-package.html","id":"documenting-a-function","chapter":"1 Building an  package","heading":"1.3 Documenting a function","text":"important properly document code. Every project least two developers:,,6 months.6 months.sake future self, favor take time document code !strongly advise use roxygen2 package document packages. main advantage help function file code defining function.👉 turn !Start inserting skeleton helper “Insert Roxygen Skeleton” located “Code” menu Magic Wand sub-menu script window.Start inserting skeleton helper “Insert Roxygen Skeleton” located “Code” menu Magic Wand sub-menu script window.Complete documentation filling :\ntitle function (first line)\ndescription function (second paragraph)\nfill third paragraph, part go “Details” section help page\nmeaning parameters\noutput, @return tag\nComplete documentation filling :title function (first line)title function (first line)description function (second paragraph)description function (second paragraph)fill third paragraph, part go “Details” section help pageif fill third paragraph, part go “Details” section help pagethe meaning parametersthe meaning parametersthe output, @return tagthe output, @return tagGenerate documentation using “Document” “” menu “Build” tab (alternatively run devtools::document() use Ctrl+Shift+D). effect command multiple:\nman folder created inside , mvnpdf.Rd file contains help information function\nNAMESPACE file modified\nGenerate documentation using “Document” “” menu “Build” tab (alternatively run devtools::document() use Ctrl+Shift+D). effect command multiple:man folder created inside , mvnpdf.Rd file contains help information functiona man folder created inside , mvnpdf.Rd file contains help information functionthe NAMESPACE file modifiedthe NAMESPACE file modifiedIn case problems curiosity done, can look proposal.details package documentation roxygen2 tags, see Object documentation section Wickham & Bryan R packages (2023)Let us finish mentioning function usethis package initializes home help page whole package:generated help page accessible, package installed, following command:","code":"\nusethis::use_package_doc()\n?mypkgr"},{"path":"building-an-package.html","id":"interactively-test-the-package","chapter":"1 Building an  package","heading":"1.4 Interactively test the package","text":"test package, load  using “Load ” (Ctrl+Shift+L) “” menu “Build” tab, alternatively devtools::load_all()).can use package directly : look function help page ?mvnpdf example execute commands given example section help page.code development, can thus:Add/Modify  codeAdd/Modify  codeRe-load package Ctrl+Shift+LRe-load package Ctrl+Shift+LExperiment consoleExperiment consoleAnd ……","code":"\n?mvndpf"},{"path":"building-an-package.html","id":"automatically-test-your-package","chapter":"1 Building an  package","heading":"1.5 Automatically test your package","text":"initialize automatic testing capabilities package, execute following command:command creates tests folder includes testthat.R file – modified – testthat/ folder add automated tests. tool based theory unit tests.example, content file, containing two tests, named test-mvnpdf.R put testthat folder (instead hand, can simply use helper function usethis::use_test() create file right place ):execute tests, can click “Test package” (Ctrl+Shift+T) “” menu “Build” tab, run devtools::test()advantage automatic tests run every time check package (see just ).good practice add unit test time bug identified fixed,\ncan immediately identify prevent error happening future.","code":"\nusethis::use_testthat()\ntest_that(\"correct result for univariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(1.96), Log=FALSE)$y, dnorm(1.96))\n  expect_equal(mvnpdf(x=matrix(c(1.96, -0.5), ncol = 2), Log=FALSE)$y,\n               dnorm(c(1.96, -0.5)))\n})\n\ntest_that(\"correct results for bivariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(rep(1.96,2), nrow=2, ncol=1), Log=FALSE)$y,\n               mvtnorm::dmvnorm(rep(1.96, 2)))\n})"},{"path":"building-an-package.html","id":"checking-your-package","chapter":"1 Building an  package","heading":"1.6 Checking your package","text":"Running check means ensuring everything package correct work expected, can installed properly various OS. “Passing R CMD CHECK” mandatory successfully uploading package CRAN.perform R CMD CHECK package, can click “Check” (Ctrl+Shift+E) “Build” tab, run devtools::check().check, automated unit tests developed previously executed. advantage written tests, don’t need worry , simply react adjust code errors returned flagged.","code":""},{"path":"building-an-package.html","id":"install-your-package","chapter":"1 Building an  package","heading":"1.7 Install your package","text":"moment, package exists environment associated RStudio project created. able use anywhere (computer)  general way, install (like CRAN package example)., click “Install” (Ctrl+Shift+B) “Build” tab, alternatively can run devtools::install().finally, can configure RStudio’s behavior time installation, simultaneously documents package: go “” menu “Build” tab, “Configure Build Tools…”. click “Configure” next “Generate documentation Roxygen”, check box “Install Restart”.","code":""},{"path":"building-an-package.html","id":"appendix-1.1-add-an-s3-method","chapter":"1 Building an  package","heading":"Appendix 1.1: add an S3 method","text":"packages, often implement called S3 methods , result object res, one can run print(res), summary(res), plot(res), …example plot() method can add package:⚠️ WARNING ! order S3 method want apply result function mvnpdf(), declare mvnpdf() returns result class mvnpdf.Test function, executing example.Don’t forget re-install package (“Install” Ctrl+Shift+B).Look contents man folder changes made NAMESPACE.proposed solution: file contains complete code mvnpdf() function associated plot() method.","code":"\n#' Plot of the mvnpdf function\n#'\n#' @param x an object of class \\code{mvnpdf} resulting from a call of\n#' \\code{mnvpdf()} function.\n#' @param ... graphical parameters passed to \\code{plot()} function.\n#'\n#' @return Nothing is returned, only a plot is given.\n#' @export\n#'\n#' @examples\n#' pdfvalues <- mvnpdf(x=matrix(seq(-3, 3, by = 0.1), nrow = 1), Log=FALSE)\n#' plot(pdfvalues)\nplot.mvnpdf <- function(x, ...) {\n  plot(x$x, x$y, type = \"l\", ...)\n}"},{"path":"building-an-package.html","id":"appendix-1.2-submit-ones-package-on-cran","chapter":"1 Building an  package","heading":"Appendix 1.2: submit one’s package on CRAN","text":"Run two following commands: devtools::check() followed devtools::submit_cran().\ndetails, see Wickham & Bryan’s recommended pipeline book R packages","code":""},{"path":"version-control-with-git-and-github.html","id":"version-control-with-git-and-github","chapter":"2 Version control with git and GitHub","heading":"2 Version control with git and GitHub","text":"interested solutions offered RStudio GitHub hosting version control projects. allows monitor changes history, help collaborative development facilitate continuous integration.","code":""},{"path":"version-control-with-git-and-github.html","id":"principles-of-version-control","chapter":"2 Version control with git and GitHub","heading":"2.1 Principles of version control","text":"principle version control record successive changes made files (especially .R files case).RStudio offers 2 integrated solutions version control:gitgitsvn (“subversion”)svn (“subversion”)","code":""},{"path":"version-control-with-git-and-github.html","id":"git","chapter":"2 Version control with git and GitHub","heading":"2.1.1 git","text":"git version control software (.e. tool record history successive changes code allow share changes people). git command line program, necessarily intuitive use.git works follows: remote server (e.g. cloud), updated version code available. time possible access version code online. contributor can download last updated version (action called pull), editing locally. changes made locally, contributor can update online version code, changes become available everyone (action called push).NB: git designed lightweight files (text files) far optimized heavy /compressed files (e.g. .RData files).","code":""},{"path":"version-control-with-git-and-github.html","id":"subversion","chapter":"2 Version control with git and GitHub","heading":"2.1.2 subversion","text":"subversion solution available RStudio. works similar way git, less features won’t detail (major difference contributors work simultaneously version code).","code":""},{"path":"version-control-with-git-and-github.html","id":"use-git-locally-within-rstudio","chapter":"2 Version control with git and GitHub","heading":"2.2 Use git locally within RStudio","text":"👉 turn !Start enabling git “Git/SVN” tab “Project Options” located “Tools” menu follow instructions. can also run usethis::use_git()  console alternatively.Start enabling git “Git/SVN” tab “Project Options” located “Tools” menu follow instructions. can also run usethis::use_git()  console alternatively.“Git” tab now appears next “Build” tab,\nregister current state package making first commit:“Git” tab now appears next “Build” tab,\nregister current state package making first commit:2a. Select files track (select .Rproj file)2a. Select files track (select .Rproj file)2b. write informative message (collaborators – includes future self)2b. write informative message (collaborators – includes future self)2c. click “Commit”2c. click “Commit”2d. first time using git computer, might prompted error looks something like :\n         *** Please tell .\n\n         Run\n\n         git config --global user.email \"@example.com\"\n         git config --global user.name \"Name\"\nsolve , run following command  console user.name email filled : usethis::use_git_config(user.name = \"FirstName LastName\", user.email = \"@email.com\")2d. first time using git computer, might prompted error looks something like :solve , run following command  console user.name email filled : usethis::use_git_config(user.name = \"FirstName LastName\", user.email = \"@email.com\")Add “*.Rproj” line “.gitignore” file make new commitVisualize changes history using visualization tools\n“Diff” “History” tools accessible “Git” tab","code":"         *** Please tell me who you are.\n\n         Run\n\n         git config --global user.email \"you@example.com\"\n         git config --global user.name \"Your Name\""},{"path":"version-control-with-git-and-github.html","id":"good-commit-practices","chapter":"2 Version control with git and GitHub","heading":"2.2.1 Good commit practices","text":"Ideally, commit solve one problem. fix entirety (complete), contain changes related problem (minimal). especially useful write informative commit messages (kind help collaborators, includes future self). also concise, describe reasons changes rather changes (visible Diff).NB: sometimes difficult follow guidelines letter, merely ideal guide. certainly prevent regularly making commits.hand, temptation “clean” tidy change-history natural, source unnecessary problems. contradicts traceability goal version control. Since code development generally complex, messy, non-linear intellectual process, normal recording changes reflects path. practice, future self first user change history, priority make easier future solving bugs extending functionality.","code":""},{"path":"version-control-with-git-and-github.html","id":"github","chapter":"2 Version control with git and GitHub","heading":"2.3 GitHub","text":"GitHub website offering online code hosting solution, based git. many alternative websites services (GitLab, Bitbucket, …) allowing host code also based git. GitHub popular  community, relatively easy use, even novice user.Advantages using GitHub:simple user-friendly graphical interface track history changes codea simple user-friendly graphical interface track history changes codethe latest development version code available online can reference (can even reference specific commit number freeze specific version code)latest development version code available online can reference (can even reference specific commit number freeze specific version code)users clear transparent channel report bugs/difficultiesusers clear transparent channel report bugs/difficultiesit greatly facilitates collaborative developmentit greatly facilitates collaborative development","code":""},{"path":"version-control-with-git-and-github.html","id":"upload-ones-package-onto-github","chapter":"2 Version control with git and GitHub","heading":"2.3.1 Upload one’s package  onto GitHub","text":"👉 turn !Go https://github.com/ create GitHub account (hesitate, common convention use firstnamelastname username)Run usethis::use_github()  console follow instructions.Add README.Rmd file package order nice home page GitHub:\n3a. RStudio, run command usethis::use_readme_rmd()\n3b. using “Diff” tool “Git” tab RStudio, review changes made previous command\n3c. edit created README.Rmd file, create corresponding README.md file running knitr (click wool ball “Knit” top left RStudio), making 3rd commit containing changes\n3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click “Push” “Git” tab. Now, changes 3rd commit visible online GitHub.\n3a. RStudio, run command usethis::use_readme_rmd()3b. using “Diff” tool “Git” tab RStudio, review changes made previous command3c. edit created README.Rmd file, create corresponding README.md file running knitr (click wool ball “Knit” top left RStudio), making 3rd commit containing changes3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click “Push” “Git” tab. Now, changes 3rd commit visible online GitHub.","code":""},{"path":"version-control-with-git-and-github.html","id":"collaborative-code-production","chapter":"2 Version control with git and GitHub","heading":"2.4 Collaborative code production","text":"git GitHub particularly useful efficient several people collaborate develop code together. Indeed, everyone can pull push successive changes code, simultaneously, endusing always working latest version code. see different concepts useful case collaborative work.👉 turn !pairing-another participant, add new buddy “collaborator” GitHub directory “Settings” tab GitHub.pairing-another participant, add new buddy “collaborator” GitHub directory “Settings” tab GitHub.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.RStudio, create new project form git using https url buddy’s project.RStudio, create new project form git using https url buddy’s project.","code":""},{"path":"version-control-with-git-and-github.html","id":"branches","chapter":"2 Version control with git and GitHub","heading":"2.4.1 Branches","text":"useful features git branches. allows make important changes changes code without disrupting current operation. particularly useful explore development path don’t know successful end.way, already using branches since beginning part. Indeed, default branch called “main” (sometimes “master”).Thanks system branches, obtain tree different commits time (nodes correspond separation branches).","code":""},{"path":"version-control-with-git-and-github.html","id":"merge","chapter":"2 Version control with git and GitHub","heading":"2.4.2 Merge","text":"-called “pull” can decomposed 2 actions made git:first fetch, corresponds downloading online codefirst fetch, corresponds downloading online codeimmediately followed merge, merges local version downloaded changes.immediately followed merge, merges local version downloaded changes.conducting experimental development one branch one may want merge changes “master” branch example, experiment proved successful.changes concern separate parts code, merging can done without problem. hand, two versions merged contain changes concern lines code since last common commit , encounter one () conflicts, manually resolved.","code":""},{"path":"version-control-with-git-and-github.html","id":"conflicts","chapter":"2 Version control with git and GitHub","heading":"2.4.3 Conflicts","text":"Let’s take following example: developer \\(D_1\\) developer \\(D_2\\) pulled version v0.1 code time \\(t\\) respective machines. work independently make changes code. pushing /changes, developer \\(D_2\\) receives error message:\"Sync Error.Please resolve conflicted files, commit, try syncing .\"Chaque fichier étant source de conflit alors été automatiquement édité comme suit :order solve conflict, manually carefully edit file one one, choosing whether keep local online version code, can commit , finally successfully push changes online.👉 turn !Edit README.Rmd file paired buddy, commit change, finally push .buddy modified README.Rmd modify file line (make sure discussing together), WITHOUT pulling buddy’s changes first! Commit try push changes.Resolve conflict.NB: real life want avoid situation always pull pushing, purposedly opposite sake providing example demystifying conflicts.","code":"<<<<<<< HEAD\nlocal code\n=======\nonline code\n>>>>>>> remote"},{"path":"version-control-with-git-and-github.html","id":"fork","chapter":"2 Version control with git and GitHub","heading":"2.4.4 Fork","text":"fork allows create copy available code repository. Thus original code impacted changes. like creating branch, severing tree, can assume ownership . also called “cutting” continue metaphor…action mainly useful pull requests (see next).","code":""},{"path":"version-control-with-git-and-github.html","id":"pull-request","chapter":"2 Version control with git and GitHub","heading":"2.4.5 Pull request","text":"Pull requests easiest way propose changes code project contributor . GitHub provides graphical interface makes easy .👉 turn !Modify README.Rmd neighbor paired-buddy forking package.Modify README.Rmd neighbor paired-buddy forking package.Propose change form pull request GitHub repository webpage (“Pull request”s tab).Propose change form pull request GitHub repository webpage (“Pull request”s tab).Accept neighbor pull request repository GitHub website, merge .Accept neighbor pull request repository GitHub website, merge .","code":""},{"path":"version-control-with-git-and-github.html","id":"issues","chapter":"2 Version control with git and GitHub","heading":"2.4.6 Issues","text":"GitHub repository, can post comment, form issue, alert developers possible bug (providing minimally reproducible example bug), question use package, ask additional feature…Ideally, propose pull request solves issue can (.e. ability time).👉 turn !Use usethis::use_github_links() add following 2 lines package DESCRIPTION file:URL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesUse usethis::use_github_links() add following 2 lines package DESCRIPTION file:URL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesView new changes, commit .View new changes, commit .Create issue paired buddy’s projectCreate issue paired buddy’s project","code":""},{"path":"version-control-with-git-and-github.html","id":"continuous-integration-ci","chapter":"2 Version control with git and GitHub","heading":"2.5 Continuous Integration (CI)","text":"change, commit, possibility introduce 1 () bugs prevent package passing CRAN R CMD CHECK. accumulate many bugs, time submitting new version CRAN many corrections make. even frustrating package passed R CMD CHECK …Continuous integration services allow check test package automatically commit ! case failure, receive email informing . number services offer (limited) free package open-source projects.Another reason use continuous integration allows test package different infrastructures (e.g. Windows, Ubuntu, Mac OS) different versions  (current, devel…)","code":""},{"path":"version-control-with-git-and-github.html","id":"github-actions","chapter":"2 Version control with git and GitHub","heading":"2.5.1 GitHub Actions","text":"GitHub Actions let launch “actions” automatically, every time push GitHub. usethis::use_github_action(\"check-standard\") command allows initialize Github Actions add R CMD CHECK action package.👉 turn !Run command usethis::use_github_action(\"check-standard\"), commit push changes. See happens GitHub webpage “Actions” tab.Run command usethis::use_github_action(\"check-standard\"), commit push changes. See happens GitHub webpage “Actions” tab.Add badge README.Rmd (forget knit ) code obtained console commit (push) changes.Add badge README.Rmd (forget knit ) code obtained console commit (push) changes.look following webpage informs different GitHub Actions available  packages: https://github.com/r-lib/actions/blob/v2-branch/examples/README.md","code":""},{"path":"version-control-with-git-and-github.html","id":"build-and-deploy-a-companion-website-for-ones-package","chapter":"2 Version control with git and GitHub","heading":"2.6 Build and deploy a companion website for one’s package","text":"pkgdown  package automatically generate nice website gathering documentation package (including Vignettes).👉 À vous de jouer !Executer la commande usethis::use_pkgdown() dans la console .Executer la commande usethis::use_pkgdown() dans la console .Commiter et pusher les changements. Rendez-vous sur l’onglet Actions de votre répertoire sur GitHub et constater les nouveautés.Commiter et pusher les changements. Rendez-vous sur l’onglet Actions de votre répertoire sur GitHub et constater les nouveautés.👉 À vous de jouer !Examiner les changement du fichier DESCRIPTION suite à l’execution des différentes commandes usethis::use_... précedemment.Modifier le champ URL du fichier DESCRIPTION.","code":""},{"path":"version-control-with-git-and-github.html","id":"additional-references","chapter":"2 Version control with git and GitHub","heading":"2.7 Additional References","text":"Happy Git R Jenny Bryan.Happy Git R Jenny Bryan.Jennifer Bryan (2018). Excuse , Moment Talk Version Control? American Statistician 72 (1):20–27.DOI: 10.1080/00031305.2017.1399928Jennifer Bryan (2018). Excuse , Moment Talk Version Control? American Statistician 72 (1):20–27.DOI: 10.1080/00031305.2017.1399928","code":""},{"path":"version-control-with-git-and-github.html","id":"appendix-2.1-r-hub","chapter":"2 Version control with git and GitHub","heading":"Appendix 2.1: R-hub","text":"R consortium provides R-hub builder, ambition one day provide continuous integration service especially dedicated  packages.advantage use exact infrastructure CRAN make check package foolproof. can use devtools::check_rhub() function.","code":""},{"path":"version-control-with-git-and-github.html","id":"appendix-2.2-code-coverage","chapter":"2 Version control with git and GitHub","heading":"Appendix 2.2: Code coverage","text":"covr package proposes solution measure coverage unit tests associated package. test coverage determines proportion source code actually used execution unit tests. Measuring coverage code reinforces reliability code gives confidence potential users.👉 turn !Run command usethis::use_coverage(), add nice badge README.md code got R consoleCommit push changes.information feel free look covr vignette.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-and-comparing-execution-times","chapter":"3 Measuring and comparing execution times","heading":"3 Measuring and comparing execution times","text":"first step optimizing code measure execution time, order compare timings different implementations.section following refer book Advanced R Hadley Wickham 3, freely available online.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-execution-times-with-system.time","chapter":"3 Measuring and comparing execution times","heading":"3.1 Measuring execution times with system.time()","text":"measure execution time  command, can use native system.time() function like :problem appears example execution fast system.time() displays 0 (close value) impossible compare hopefully faster implementation. Also, see variability run command several times.Thus want compare code mvtnorm::dmvnorm() function, can’t use system.time():imagine need increase complexity calculation able compare , actually better way: use microbenchmark package !","code":"\nobs <- matrix(rep(1.96, 2), nrow=2, ncol=1)\nsystem.time(mvnpdf(x=obs, Log=FALSE))##    user  system elapsed \n##   0.001   0.000   0.002\nobs <- rep(1.96, 2)\nsystem.time(mvtnorm::dmvnorm(obs))##    user  system elapsed \n##   0.002   0.001   0.007"},{"path":"measuring-and-comparing-execution-times.html","id":"compare-execution-times-with-microbenchmark","chapter":"3 Measuring and comparing execution times","heading":"3.2 Compare execution times with microbenchmark()","text":"name indicates, package allows compare execution times even fast. Moreover, benchmarked expression repeatedly evaluated certain number times, thus stabilizing timing estimations.mvnpdf() dmnvorm() functions able take matrix input, can also compare speeds setting:Something happened… find exactly causing issue comes next.","code":"\nlibrary(microbenchmark)\nmb <- microbenchmark(mvtnorm::dmvnorm(rep(1.96, 2)),\n                     mvnpdf(x = matrix(rep(1.96,2)), Log = FALSE),\n                     times = 1000)## Warning in microbenchmark(mvtnorm::dmvnorm(rep(1.96, 2)), mvnpdf(x =\n## matrix(rep(1.96, : less accurate nanosecond times to avoid potential integer\n## overflows\nmb## Unit: microseconds\n##                                           expr    min     lq     mean median\n##                 mvtnorm::dmvnorm(rep(1.96, 2)) 20.008 20.869 23.72125 21.320\n##  mvnpdf(x = matrix(rep(1.96, 2)), Log = FALSE) 18.409 19.106 20.29139 19.475\n##      uq      max neval cld\n##  22.222 1596.458  1000  a \n##  20.254   62.320  1000   b\nn <- 100\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), \n                            Log=FALSE),\n                     times=100)\nmb## Unit: microseconds\n##                                                       expr     min       lq\n##         mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))  22.919  23.5545\n##  mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 265.188 269.8210\n##       mean  median       uq     max neval cld\n##   25.15596  24.313  25.0920  59.491   100  a \n##  274.55281 272.199 275.7045 336.036   100   b"},{"path":"profiling-code.html","id":"profiling-code","chapter":"4 Profiling code","heading":"4 Profiling code","text":"Profiling determining part code take time compute (also memory-wise). found block code takes longest time execute, goal optimize small part code.get profiling code , select lines code interest go “Profile” menu “Profile Selected Lines”. uses package profvis, particular profvis() function.OK, OK, get ! Concatenating vector go loop really good idea.","code":"\nn <- 10e4\npdfval <- mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)"},{"path":"profiling-code.html","id":"comparison-with-an-improved-implementtation-of-mnvpdf.","chapter":"4 Profiling code","heading":"4.1 Comparison with an improved implementtation of mnvpdf().","text":"Consider new version mvnpdf(), called mvnpdfsmart(). Download file, include package.Now profile following command:indeed removed main computational bottleneck, can now learn detailed way takes time function.confirm mvnpdfsmart() indeed much faster mvnpdf() can make comparison using microbenchmark():can also check whether mvnpdfsmart() becomes competitive dmvnorm():still work done…","code":"\nn <- 10e4\npdfval <- mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)\nn <- 1000\nmb <- microbenchmark(mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE),\n                     mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n),\n                                 Log = FALSE),\n                     times=100L)\nmb## Unit: milliseconds\n##                                                            expr      min\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3.100379\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2.286939\n##        lq     mean   median       uq      max neval cld\n##  3.192342 3.581193 3.228524 3.391172 7.189227   100  a \n##  2.323347 2.353397 2.334396 2.371727 2.680908   100   b\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   42.025\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3078.280\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2284.520\n##         lq       mean    median        uq      max neval cld\n##    43.7675   52.04663   51.5575   57.1335   97.088   100 a  \n##  3170.0585 3514.81069 3201.1980 3245.4985 6844.868   100  b \n##  2316.8280 2338.23738 2327.5700 2348.2545 2497.843   100   c"},{"path":"profiling-code.html","id":"comparison-with-an-optimized-pure-implementation","chapter":"4 Profiling code","heading":"4.2 Comparison with an optimized pure  implementation","text":"several research, tests, trials errors, Boris arrived optimized version using  capabilities.Include mvnpdfoptim() function package, profile :microbenchmark() goes :Finally, can profile dmvnorm() function:","code":"\nn <- 10e4\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE))\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   43.747\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3117.107\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2309.284\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 1734.464\n##        lq       mean    median        uq      max neval  cld\n##    52.521   60.17406   60.0035   65.4975   95.735   100 a   \n##  3257.532 3587.14248 3370.0770 3462.4500 7694.060   100  b  \n##  2329.394 2426.21805 2347.8855 2383.0225 5667.061   100   c \n##  1768.966 1921.91313 1791.9050 1823.1675 6143.317   100    d\nn <- 10e5\nlibrary(mvtnorm)\nprofvis::profvis(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)))"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"rcpp-or-how-to-easily-embed-c-code-into-a-package","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5 Rcpp or how to easily embed C++ code into a  package","text":"Rcpp (“R-C-Plus-Plus”) package facilitates interface C++ .  interpreted language, feature makes number things easy (including giving us access console can evaluate code variables fly). Nevertheless, ease use counterbalanced larger computation times comapred lower level languages C, Fortran C++ (require compilation).curious reader directed towards online book Rcpp everyone Masaki E. Tsuda, thorough complete resource understanding use Rcpp, complement introduction can found “Rcpp” section Hadley Wickham’s book Advanced R4.","code":""},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"first-function-in-rcpp","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.1 First function in Rcpp","text":"👉 turn !make package ready use Rcpp, start running following command:See changes madeYou also add following 2 Roxygen comments general help page package, indicated console:now going create first function Rcpp invert matrix. , use C++ library Armadillo. modern simple linear algebra library, highly optimized, interfaced  via RcppArmadillo package.C++ different language . main differences impact us:C++ efficient loops (including nested loops – ⚠️ often one order faster , due way C++ allocates walks memory).C++ efficient loops (including nested loops – ⚠️ often one order faster , due way C++ allocates walks memory).command must end semicolon ;.command must end semicolon ;.C++ typed language: must declare type variable can use code.C++ typed language: must declare type variable can use code.👉 turn !Create new C++ file RStudio (via File > New File > C++ File menu), save src folder. Take time read try understand line.Compile load package (via “Install Restart” button) try using timesTwo() function console.Install RcppArmadillo 👉 package, don’t forget make necessary additions DESCRIPTION (use usethis::use_rcpp_armadillo())Using Hadley Wickham’s introduction Rcpp book Advanced R, well documentation RcppArmadillo package C++ library Armadillo, try write short function invC() C++ computes inverse matrix.successfully compiled invC function accessible , create mvnpdf_invC() function mvnpdfsmart implementation replacing matrix inverse calculations call invC.Evaluate performance gain new implementation mvnpdf_invC.","code":"```r\nusethis::use_rcpp()\n``````r\n#' @useDynLib mypkgr\n#' @importFrom Rcpp sourceCpp, .registration = TRUE\nNULL\n```\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb\n## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   43.009\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3098.329\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2306.619\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 1738.195\n##  mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2302.396\n##         lq       mean   median        uq      max neval  cld\n##    48.3595   57.39918   54.243   63.9395   98.687   100 a   \n##  3194.7405 3351.44291 3274.998 3366.7970 6867.746   100  b  \n##  2347.6190 2535.39162 2363.096 2406.2080 5864.230   100   c \n##  1764.4350 1867.16132 1781.716 1818.4730 5388.015   100    d\n##  2326.7705 2518.15973 2348.910 2375.0890 8994.539   100   c\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, \n    nrow = 2, ncol = 1000), Log=FALSE))## Error in parse_rprof_lines(lines, expr_source): No parsing data available. Maybe your function was too fast?\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, \n    nrow = 100, ncol = 1000), Log=FALSE))"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"optimize-thanks-to-c","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.2 Optimize thanks to C++","text":"general rule, much computational time gained replacing optimized  function C++ function. Indeed, base  functions fact already wrappers around well optimized C Fortran routines. gain limited suppression argument checking type management (reason!).👉 turn !mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfsmartC().mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfsmartC().Evaluate performance gain new implementation mvnpdfsmartC.Evaluate performance gain new implementation mvnpdfsmartC.can download proposal mvnpdfsmartC.cpp .(relatively small) additional speed gain (cost code readability!), can look optimized Armadillo C++ implementation mvnpdfoptimC.cpp.Note Rcpp functions can used outside package architecture thanks Rcpp::sourceCpp() function. , seen always desirable manage one’s code inside package, unlikely need !","code":"\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmartC(x=matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2), varcovM = diag(2), Log=FALSE),\n                     mvnpdfoptimC(x=matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2), varcovM = diag(2), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                                                                       expr\n##                                                         mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))\n##                                                  mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##  mvnpdfsmartC(x = matrix(1.96, nrow = 2, ncol = n), mean = rep(0,      2), varcovM = diag(2), Log = FALSE)\n##  mvnpdfoptimC(x = matrix(1.96, nrow = 2, ncol = n), mean = rep(0,      2), varcovM = diag(2), Log = FALSE)\n##       min       lq       mean    median        uq      max neval  cld\n##    42.681   49.856   57.23600   56.9080   63.5090   86.961   100 a   \n##  3092.302 3191.194 3379.48322 3234.2030 3377.1495 7367.741   100  b  \n##  2293.048 2335.913 2455.89467 2352.0470 2386.5895 6074.683   100   c \n##  1734.300 1767.305 1986.68903 1787.7435 1810.0475 5660.747   100    d\n##  2283.823 2320.744 2379.88600 2340.0340 2364.6750 5334.756   100   c \n##    51.209   53.177   55.83421   54.4685   56.5595  118.080   100 a   \n##    35.547   37.597   40.65888   39.9955   42.3325   69.003   100 a"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"annexe-5.1-premature-optimization-is-a-bad-idea","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"Annexe 5.1: premature optimization is a bad idea","text":"Chambers, Software Data Analysis: Programming R, Springer, 2008:“Including additional C code serious step, added dangers often substantial amount programming debugging required. good reason.”","code":""},{"path":"r-code-parallelization.html","id":"r-code-parallelization","chapter":"6 R code Parallelization","heading":"6 R code Parallelization","text":"","code":""},{"path":"r-code-parallelization.html","id":"introduction-to-parallel-execution-in","chapter":"6 R code Parallelization","heading":"6.1 Introduction to parallel execution in ","text":"Apart optimizing code algorithms, another way get high performing code take advantage parallel architectures modern computers. goal parallelize one’s code order perform simultaneous operations distinct parts problem, using different computing cores. reduce total computation time needed, set operations executed faster, resulting overall user speed-.significant number algorithms -called “embarrassingly parallel”, .e. whose computations can broken several independent sub-computations. statistics, often easy straightforward parallelize according different observations different dimensions. Typically, operations can written form loop whose operations independent one iteration next.necessary operations execute code parallel follows:Start \\(m\\) “worker” processes (.e. computing cores) initialize themStart \\(m\\) “worker” processes (.e. computing cores) initialize themSend necessary functions data task workersSend necessary functions data task workersSplit tasks \\(m\\) operations similar size send workersSplit tasks \\(m\\) operations similar size send workersWait workers finish calculationsWait workers finish calculationsCollect results different workersCollect results different workersStop worker processesStop worker processesDepending platform, several communication protocols available cores. UNIX systems, Fork protocol used, available Windows PSOCK protocol used instead. Finally, distributed computing architecture cores necessarily physical processor, MPI protocol generally used. advantage future future.apply package code can executed whatever hardware configuration.Since R 2.14.0, parallel package directly included  allows start stop cluster several worker processes (step 1 6). addition parallel package, use future package allows manage worker processes communication articulation future.apply package, turn allows manage dialogue workers (sending, receiving collecting results – steps 2, 3, 4 5).","code":""},{"path":"r-code-parallelization.html","id":"first-parallel-function","chapter":"6 R code Parallelization","heading":"6.2 First  parallel function","text":"👉 turn !Start writing simple function computes logarithm \\(n\\) numbers:Determine many cores available computer function future::availableCores().Determine many cores available computer function future::availableCores().Using function future::plan(multisession(workers = XX)), declare “plan” parallel computations computer (taking care always leave least one core available handle processes).Using function future::plan(multisession(workers = XX)), declare “plan” parallel computations computer (taking care always leave least one core available handle processes).Using one *apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Using one *apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)parallel version runs much slower… fact, individual tasks fast,  spend time communicating cores actual computations.loop iteration must relatively long parallel computing provide significant gain computation time!increasing \\(n\\), observe reduction difference 2 implementations (parallel computation time increases slowly compared increase sequential function).","code":"\nlibrary(microbenchmark)\nlibrary(future.apply)\n\nlog_seq <- function(x){\n  # try this yourself (spoiler alert: it is quite long...):\n  # res <- numeric(length(x))\n  # for(i in 1:length(x)){\n  #   res[i] <- log(x[i])\n  # }\n  # return(res)\n  return(log(x))\n}\n\nlog_par <- function(x){\n  res <- future_sapply(1:length(x), FUN = function(i) {\n    log(x[i])\n  })\n  return(res)\n}\n\nplan(multisession(workers = 3))\nmb <- microbenchmark(log_par(1:100), log_seq(1:100), times = 50)"},{"path":"r-code-parallelization.html","id":"efficient-parallelization","chapter":"6 R code Parallelization","heading":"6.3 Efficient parallelization","text":"now look another use case. Let’s say large array data 10 observations 100,000 variables (e.g. genetic measurements), want compute median variables.experienced  user, operation easily implemented using apply():reality, (good) loop slower – provided nicely programmed:👉 turn !\nTry improve computation time parallelizing code 100,000 variables. gain computation time?","code":"\nx <- matrix(rnorm(1e6), nrow = 10)\ndim(x)## [1]     10 100000\ncolmedian_apply <- function(x){\n  return(apply(x, 2, median))\n}\nsystem.time(colmedian_apply(x))##    user  system elapsed \n##   1.598   0.004   1.603\ncolmedian_for <- function(x){\n  ans <- rep(0, ncol(x)) \n  for (i in 1:ncol(x)) {\n    ans[i] <- median(x[, i]) \n  }\n  return(ans)\n}\nsystem.time(colmedian_for(x))##    user  system elapsed \n##   1.463   0.004   1.468\ncolmedian_par <- function(x){\n  res <- future_sapply(1:ncol(x), FUN = function(i) {\n          median(x[, i])\n    })\n  return(res)\n}\nplan(multisession(workers = 3))\nsystem.time(colmedian_par(x))##    user  system elapsed \n##   0.125   0.019   0.872\nmb <- microbenchmark(colmedian_apply(x), \n                     colmedian_for(x),\n                     colmedian_par(x), \n                     times = 10)\nmb## Unit: milliseconds\n##                expr       min       lq      mean    median        uq       max\n##  colmedian_apply(x) 1517.7429 1523.117 1574.7846 1542.8670 1590.8747 1778.3447\n##    colmedian_for(x) 1470.2120 1484.274 1522.9806 1498.6451 1564.3340 1629.3131\n##    colmedian_par(x)  688.8299  692.057  717.1061  713.0331  735.1993  771.2606\n##  neval cld\n##     10  a \n##     10  a \n##     10   b"},{"path":"r-code-parallelization.html","id":"other-plans-for-parallel-computations","chapter":"6 R code Parallelization","heading":"6.3.1 Other “plans” for parallel computations","text":"run code (exactly code, one advantages future* family packages), need set “plan” computations:computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.HPC cluster (like CURTA Bordeaux), refer package future.batchtoolson HPC cluster (like CURTA Bordeaux), refer package future.batchtools","code":""},{"path":"r-code-parallelization.html","id":"parallelization-in-our-common-theme-example","chapter":"6 R code Parallelization","heading":"6.4 Parallelization in our common theme example","text":"👉 turn !function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))Compare execution times 10 000 observationsCompare execution times 10 000 observationsYou can download proposed implementation mvnpdfoptim_par .","code":"\nplan(multisession(workers = 3))\nn <- 10000\nmb <- microbenchmark::microbenchmark(\n  mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n  mypkgr::mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  mypkgr::mvnpdfoptim_par(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  times=20)\nmb## Unit: microseconds\n##                                                                             expr\n##                               mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))\n##           mypkgr::mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##  mypkgr::mvnpdfoptim_par(x = matrix(1.96, nrow = 2, ncol = n),      Log = FALSE)\n##        min        lq       mean     median         uq        max neval cld\n##    229.436   261.539   281.2785   268.4885   295.5895    363.711    20  a \n##  17547.877 17695.313 18908.0418 18152.1145 19724.6080  23006.289    20  a \n##  40505.048 40960.353 53730.5779 41515.2060 42951.1695 277900.255    20   b"},{"path":"r-code-parallelization.html","id":"conclusion","chapter":"6 R code Parallelization","heading":"6.5 Conclusion","text":"Parallel computation saves time, first optimize code. parallelizing code, gain execution time depends ratio communication time effective computation time task.","code":""},{"path":"take-home-messages.html","id":"take-home-messages","chapter":"7 Take-home message(s)","heading":"7 Take-home message(s)","text":"MAKE PACKAGES!MAKE PACKAGES!use git, least locally yourselfuse git, least locally yourselfif needed (.e. optimization  code ), afraid using Rcpp /parallelizing codeif needed (.e. optimization  code ), afraid using Rcpp /parallelizing code","code":""},{"path":"further-reading.html","id":"further-reading","chapter":"Further reading","heading":"Further reading","text":"Hadley Wickham’s online books truly excellent contain lot supplementary information covered training:\nwebsite writing packages R packages.\nwebsite Advanced R everything regarding optimization, Rcpp, parallel computing.\nwebsite R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.\nHadley Wickham’s online books truly excellent contain lot supplementary information covered training:website writing packages R packages.website writing packages R packages.website Advanced R everything regarding optimization, Rcpp, parallel computing.website Advanced R everything regarding optimization, Rcpp, parallel computing.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.online book Rcpp everyone Masaki E. Tsuda also good.online book Rcpp everyone Masaki E. Tsuda also good.","code":""}]
>>>>>>> d1f247872039f0110902e4b803f4bbd8bedaf20a
