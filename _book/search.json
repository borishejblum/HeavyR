[{"path":"index.html","id":"course-syllabus","chapter":"Course syllabus","heading":"Course syllabus","text":"main goal course give tools ease (high-performing effcient) code development . performance side come second part, initial tools introduced also useful situations require\nimportant computation times.focus presentation development tools focuusing notion package. already familiar notion, already\nalready installed packages CRAN example ! also know standard way  distribuute code make available.\nshow package also excellent tool developing code.follow outline :Build packageBuild packageTracking changes, sharing code, collaborative development automating tests packageTracking changes, sharing code, collaborative development automating tests packageMeasure computation timeMeasure computation timeProfile codeProfile codeUse Rcpp optimize needs optimizedUse Rcpp optimize needs optimizedParallelize code easilyParallelize code easilyTo take course, need following softwares installed:latest version  (https://cloud.r-project.org/)latest version  (https://cloud.r-project.org/)latest version RStudio (https://www.rstudio.com/products/rstudio/download/#download)latest version RStudio (https://www.rstudio.com/products/rstudio/download/#download)C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain (namely Xcode Command Line Tools gfortran) used  detailed )C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain (namely Xcode Command Line Tools gfortran) used  detailed )following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe software gitthe software git","code":""},{"path":"building-a-package.html","id":"building-a-package","chapter":"1 Building a  package","heading":"1 Building a  package","text":"present efficiently create build package using Rstudio IDE, devtools usethis packages.details provided reference material subject: book R packages Hadley Wickham, freely available online.","code":""},{"path":"building-a-package.html","id":"initializing-a-package","chapter":"1 Building a  package","heading":"1.1 Initializing a package","text":"simple way, built Rstudio, initialize package :create new project (top left File drop menu Rstudio)create new project (top left File drop menu Rstudio)choose “New Directory”choose “New Directory”choose “R package using devtools” (available, choose “R\npackage”, difference “R package” delete unnecessary files automatically created useful)choose “R package using devtools” (available, choose “R\npackage”, difference “R package” delete unnecessary files automatically created useful)give name package, example mypkgr.give name package, example mypkgr., get minimal structure  package, namely:DESCRIPTION file whose Title, Version, Authors@R \nDescription edited (parts can edited even added automatically, see\neven added automatically, see )DESCRIPTION file whose Title, Version, Authors@R \nDescription edited (parts can edited even added automatically, see\neven added automatically, see )NAMESPACE file later edited automatically\n(hands now)NAMESPACE file later edited automatically\n(hands now)folder R add .R script filesa folder R add .R script filesdevtools also adds three optional files:.gitignore, relative git, version control tool see detail\nsection GitHub.gitignore, relative git, version control tool see detail\nsection GitHubmypkgr.Rproj specific file Rstudio, allows define\ncharacteristics preferences project just createdmypkgr.Rproj specific file Rstudio, allows define\ncharacteristics preferences project just created.Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package).Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package)","code":""},{"path":"building-a-package.html","id":"adding-a-function-common-theme-example","chapter":"1 Building a  package","heading":"1.2 Adding a function: common theme example","text":"first invite code following function, use throughout course:want compute value density multivariate normal distribution\n\\(\\mathbb{R}^p\\) \\(n\\) points. function must applicable \nmultivariate normal distribution (.e. mean vector \n\\(\\mathbb{R}^p\\) variance-covariance matrix order \\(p\\)),\nwish compute values density evaluated\n\\(n\\) points single call function.need create function mvnpdf() file named mvnpdf.R\n folder package, :takes arguments:\nx matrix, \\(n\\) columns (observations) \\(p\\) rows\nmean vector means\nvarcovM variance-covariance matrix\nLog logical parameter, default value TRUE.\ntakes arguments:x matrix, \\(n\\) columns (observations) \\(p\\) rowsx matrix, \\(n\\) columns (observations) \\(p\\) rowsmean vector meansmean vector meansvarcovM variance-covariance matrixvarcovM variance-covariance matrixLog logical parameter, default value TRUE.Log logical parameter, default value TRUE.returns list containing matrix x, vector length \\(n\\)\nmultivariate normal distribution density values points.returns list containing matrix x, vector length \\(n\\)\nmultivariate normal distribution density values points.👉 turn !⚠️ WARNING ! click quickly link , invalidate participation class !function proposal can download\n.advice writing code, see \nR code section Hadley Wickam R packages online book.","code":""},{"path":"building-a-package.html","id":"documenting-a-function","chapter":"1 Building a  package","heading":"1.3 Documenting a function","text":"important properly document code. Every project least 2\ndevelopers:,,6 months.6 months.sake future self, favor take time document\ncode !strongly advise use roxygen2 package document\npackages. main advantage help function \nfile code defining function.👉 turn!Start inserting skeleton helper “Insert Roxygen\nSkeleton” located “Code” menu Magic Wand sub-menu \nscript window.Start inserting skeleton helper “Insert Roxygen\nSkeleton” located “Code” menu Magic Wand sub-menu \nscript window.Complete documentation filling :Complete documentation filling :title function (first line)title function (first line)description function (second paragraph)description function (second paragraph)fill third paragraph, part go “Details” section \nhelp pageif fill third paragraph, part go “Details” section \nhelp pagethe meaning parametersthe meaning parametersthe output, @return tagthe output, @return tagGenerate documentation using “Document” “” menu \nBuild” tab (Ctrl+Shift+D devtools::document()). effect \ncommand multiple:man folder created inside , mvnpdf.Rd file contains help information functiona man folder created inside , mvnpdf.Rd file contains help information functionthe NAMESPACE file modifiedthe NAMESPACE file modifiedIn case problems curiosity done, can look \nproposal.details package documentation \nroxygen2 tags, see \nObject documentation secttion Hadley Wickam R packages online book.Let’s finish mentioning function usethis package initializes \nhome help page whole package:generated help page accessible, package installed,\nfollowing command:","code":"\nusethis::use_package_doc()\n?mypkgr"},{"path":"building-a-package.html","id":"interactively-test-the-package","chapter":"1 Building a  package","heading":"1.4 Interactively test the package","text":"test package, load R using “Load ” (Ctrl+Shift+L) \n“” menu “Build” tab, alternatively devtools::load_all()).can use package directly R: see\nhelp function ?mvnpdf example execute commands given example section help page.code development, can thus:Add/Modify  codeAdd/Modify  codeRe-load package Ctrl+Shift+LRe-load package Ctrl+Shift+LExperiment consoleExperiment consoleAnd ……","code":"\n?mvndpf"},{"path":"building-a-package.html","id":"automatically-test-your-package","chapter":"1 Building a  package","heading":"1.5 Automatically test your package","text":"initialize automatic testing capabilities package, execute following command:command creates tests folder includes testthat.R file – modified – testthat folder add automated tests. tool based theory unit tests.example, content file call test-univariate.R put testthat folder:second one named test-bivariate.R :execute tests, can click “Test package” (Ctrl+Shift+T) “” menu “Build” tab, run devtools::test()advantage automatic tests run every time check package.good practice add unit test time bug identified fixed,\ncan immediately identify prevent error happening \nfuture.","code":"\nusethis::use_testthat()\ncontext(\"Univariate gaussian test\")\n\ntest_that(\"correct result for univariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(1.96), Log=FALSE)$y, dnorm(1.96))\n  expect_equal(mvnpdf(x=matrix(c(1.96, -0.5), ncol = 2), Log=FALSE)$y,\n               dnorm(c(1.96, -0.5)))\n})\ncontext(\"Bivariate gaussian test\")\n\ntest_that(\"correct results for bivariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(rep(1.96,2), nrow=2, ncol=1), Log=FALSE)$y,\n               mvtnorm::dmvnorm(rep(1.96, 2)))\n})"},{"path":"building-a-package.html","id":"checking-your-package","chapter":"1 Building a  package","heading":"1.6 Checking your package","text":"Ruunning check means ensuring tthat everything package correct work expected, can installed properly.\n“Passing R CMD CHECK” mandatory successfully uploading package CRAN.perform R CMD CHECK package, can click “Check” (Ctrl+Shift+E) “Build” tab, run devtools::check().check, automated unitt tests developed previously \nexecuted. advantage written tests, don’t need worry , simply react adjust code errors returned flagged.","code":""},{"path":"building-a-package.html","id":"install-your-package","chapter":"1 Building a  package","heading":"1.7 Install your package","text":"moment, package exists environment associated Rstudio project created. able use anywhere (computer)  general way, install (like CRAN package example)., click “Install Restart” (Ctrl+Shift+B) “Build” tab, alternatively can run devtools::install().finally, can configure Rstudio’s behavior time installation, simultaneously documents package: go “” menu “Build” tab, “Configure Build Tools”. click “Configure” check box bottom “Install Restart”.","code":""},{"path":"building-a-package.html","id":"appendix-1.1-add-an-s3-method","chapter":"1 Building a  package","heading":"1.8 Appendix 1.1: add an S3 method","text":"packages, oftten implement called S3 methods , result object res, one can run print(res), summary(res), plot(res)…example plot() method can add package:⚠️ WARNING !order S3 method want apply \nresult function mvnpdf(), declare mvnpdf() returns result class mvnpdf.Test function, executing example.Don’t forget re-install package (“Install Restart” Ctrl+Shift+B).Look contents man folder changes made NAMESPACE.proposed solution: file\ncontains complete code mvnpdf() function associated plot() method.","code":"\n#' Plot of the mvnpdf function\n#'\n#' @param x an object of class \\code{mvnpdf} resulting from a call of\n#' \\code{mnvpdf()} function.\n#' @param ... graphical parameters passed to \\code{plot()} function.\n#'\n#' @return Nothing is returned, only a plot is given.\n#' @export\n#'\n#' @examples\n#' pdfvalues <- mvnpdf(x=matrix(seq(-3, 3, by = 0.1), nrow = 1), Log=FALSE)\n#' plot(pdfvalues)\nplot.mvnpdf <- function(x, ...) {\n  plot(x$x, x$y, type = \"l\", ...)\n}"},{"path":"building-a-package.html","id":"appendix-1.2-submit-ones-package-on-cran","chapter":"1 Building a  package","heading":"1.9 Appendix 1.2: submit one’s package on CRAN","text":"Run two following commands: devtools::check() followed devtools::submit_cran().\ndetails, see Hadley Wickham’s recommanded pipeline book R packages","code":""},{"path":"version-control-with-git-and-github.html","id":"version-control-with-git-and-github","chapter":"2 Version control with git and GitHub","heading":"2 Version control with git and GitHub","text":"interested solutions offered RStudio GitHub hosting version control projects. allows monitor changes history, help collaborative development facilitate continuous integration.","code":""},{"path":"version-control-with-git-and-github.html","id":"principles-of-version-control","chapter":"2 Version control with git and GitHub","heading":"2.1 Principles of version control","text":"principle version control record successive changes made files (especially .R files case).RStudio offers 2 integrated solutions version control:gitgitsvnsvn","code":""},{"path":"version-control-with-git-and-github.html","id":"git","chapter":"2 Version control with git and GitHub","heading":"2.1.1 git","text":"git version control software (.e. tool record history successive changes code allow share changes people). git command line program, necessarily intuitive use.git works follows: server cloud, updated version code available. time possible access version code online. contributor can download last updated version (action called pull),\nediting locally. changes made locally, \ncontributor can update online version code, changes become available everyone (action called push).NB: git designed lightweight files (text files) far optimized heavy /compressed files (e.g. .RData files).","code":""},{"path":"version-control-with-git-and-github.html","id":"subversion","chapter":"2 Version control with git and GitHub","heading":"2.1.2 subversion","text":"subversion solution available RStudio. works similar way git, less functionalities won’t detail (major difference \ncontributors work simultaneously version code).","code":""},{"path":"version-control-with-git-and-github.html","id":"use-git-locally-within-rstudio","chapter":"2 Version control with git and GitHub","heading":"2.2 Use git locally within RStudio","text":"👉 turn !Start enabling git “Git/SVN” tab “Project Options” located “Tools” menu follow instructions. can also use usethis::use_git().Start enabling git “Git/SVN” tab “Project Options” located “Tools” menu follow instructions. can also use usethis::use_git().“Git” tab now appears next “Build” tab,\nregister current state package making first commit:“Git” tab now appears next “Build” tab,\nregister current state package making first commit:2a. Select files track (select .Rproj file)2a. Select files track (select .Rproj file)2b. write informative message (collaborators – includes future self)2b. write informative message (collaborators – includes future self)2c. click “Commit” >2c. click “Commit” >Add “*.Rproj” line “.gitignore” file make new commitAdd “*.Rproj” line “.gitignore” file make new commitVisualize changes history using visualization tools\n“Diff” “History” tools accessible “Git” tabVisualize changes history using visualization tools\n“Diff” “History” tools accessible “Git” tab","code":""},{"path":"version-control-with-git-and-github.html","id":"good-commit-practices","chapter":"2 Version control with git and GitHub","heading":"2.2.1 Good commit practices","text":"Ideally, commit solve one problem. fix entirety (complete), contain changes related problem (minimal). especially useful write informative commit messages (kind help collaborators, includes future self). also concise, describe reasons changes rather changes (visible Diff). NB: sometimes difficult follow guidelines letter, merely ideal guide. certainly prevent regularly making commits.hand, temptation “clean” tidy change-history natural, source unnecessary problems. contradicts traceability goal version control. Since code development generally complex, messy, non-linear intellectual process, normal recording changes reflects path. practice, future self first user change history, priority make easier future solving bugs extending functionality.","code":""},{"path":"version-control-with-git-and-github.html","id":"github","chapter":"2 Version control with git and GitHub","heading":"2.3 GitHub","text":"GitHub website offering online code hosting solution, based git. many alternative websites services (gitlab, bitbucket, …) allowing host code also based git. GitHub popular  community, relatively easy use, even novice user.Advantages using GitHub:simple user-friendly graphical interface track history changes codea simple user-friendly graphical interface track history changes codethe latest development version code available online can reference (can even reference specific commit number freeze specific version code)latest development version code available online can reference (can even reference specific commit number freeze specific version code)users clear transparent channel report bugs/difficultiesusers clear transparent channel report bugs/difficultiesit greatly facilitates collaborative developmentit greatly facilitates collaborative development","code":""},{"path":"version-control-with-git-and-github.html","id":"upload-ones-package-onto-github","chapter":"2 Version control with git and GitHub","heading":"2.3.1 Upload one’s package  onto GitHub","text":"👉 turn !Go https://github.com/ create GitHub account (hesitate, common convention use firstnamelastname username)Go https://github.com/ create GitHub account (hesitate, common convention use firstnamelastname username)Use usethis::use_github() follow instructions.Use usethis::use_github() follow instructions.Add “README.Rmd” file package order nice home page GitHub\npage GitHub:Add “README.Rmd” file package order nice home page GitHub\npage GitHub:3a. RStudio, run command usethis::use_readme_rmd()3a. RStudio, run command usethis::use_readme_rmd()3b. using “Diff” tool “Git” tab RStudio, review changes made previous command3b. using “Diff” tool “Git” tab RStudio, review changes made previous command3c. edit created “README.Rmd” file, create corresponding README.md file running knitr (click wool ball “Knit” top left RStudio), making 3rd commit containing changes3c. edit created “README.Rmd” file, create corresponding README.md file running knitr (click wool ball “Knit” top left RStudio), making 3rd commit containing changes3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click “Push” “Git” tab. Now, changes 3rd commit visible online GitHub.3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click “Push” “Git” tab. Now, changes 3rd commit visible online GitHub.","code":""},{"path":"version-control-with-git-and-github.html","id":"collaborative-code-production","chapter":"2 Version control with git and GitHub","heading":"2.4 Collaborative code production","text":"git GitHub particularly useful efficient several people collaborate develop code together. Indeed, everyone can pull push successive changes code, simultaneously, endusing always working latest version code. see different concepts useful case collaborative work.👉 turn !pairing-another participant, add new buddy “collaborator” GitHub directory “Settings” tab GitHub.pairing-another participant, add new buddy “collaborator” GitHub directory “Settings” tab GitHub.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.RStudio, create new project form git using url buddy’s project.RStudio, create new project form git using url buddy’s project.","code":""},{"path":"version-control-with-git-and-github.html","id":"branches","chapter":"2 Version control with git and GitHub","heading":"2.4.1 Branches","text":"One useful features git branches. allows make important changes changes code without disrupting current operation. particularly useful explore development path don’t know successful end.way, already using branches since beginning part. Indeed, default branch called “master” (sometimes “main”).Thanks system branches, obtain tree different commits time (nodes correspond separation branches).","code":""},{"path":"version-control-with-git-and-github.html","id":"merge","chapter":"2 Version control with git and GitHub","heading":"2.4.2 Merge","text":"-called “pull” can decomposed 2 actions made git:first fetch, corresponds downloading online codefirst fetch, corresponds downloading online codeimmediately followed merge, merges local version downloaded changes.immediately followed merge, merges local version downloaded changes.conducting experimental development one branch one may want merge changes “master” branch example, experiment proved successful.changes concern separate parts code, merging can done without problem. hand, two versions merged contain changes concern lines code since last common commit , encounter one () conflicts, manually resolved.","code":""},{"path":"version-control-with-git-and-github.html","id":"conflicts","chapter":"2 Version control with git and GitHub","heading":"2.4.3 Conflicts","text":"Let’s take following example: developer \\(D_1\\) developer \\(D_2\\) pulled version v0.1 code time \\(t\\) respective machines. work independently make changes code. pushing /changes, developer \\(D_2\\) receives error message:\"Sync Error.Please resolve conflicted files, commit, try syncing .\"Chaque fichier étant source de conflit alors été automatiquement édité comme suit :order solve conflict, manually carefully edit file one one, choosing whether keep local online version code, can commit , finally successfully push changes online.👉 turn !Edit README.Rmd file paired buddy, commit change, finally push .Edit README.Rmd file paired buddy, commit change, finally push .buddy modified README.Rmd modify file line (make sure discussing together), **WITHOUT* pulling buddy’s changes first! Comment try push changes.buddy modified README.Rmd modify file line (make sure discussing together), **WITHOUT* pulling buddy’s changes first! Comment try push changes.Resolve conflict.Resolve conflict.NB: real life want avoid situation always pull pushing, purposedly opposite sake providing example demystifying conflicts.","code":"<<<<<<< HEAD\nlocal code\n=======\nonline code\n>>>>>>> remote"},{"path":"version-control-with-git-and-github.html","id":"fork","chapter":"2 Version control with git and GitHub","heading":"2.4.4 Fork","text":"fork allows create copy available code repository. Thus original code impacted changes. like creating branch, severing tree, can assume ownership . also called “cutting” continue metaphor…action mainly useful pull requests (see next).","code":""},{"path":"version-control-with-git-and-github.html","id":"pull-request","chapter":"2 Version control with git and GitHub","heading":"2.4.5 Pull request","text":"Pull requests easiest way propose changes code project contributor . GitHub provides graphical interface makes easy .👉 turn !Modify README.Rmd neighbor paired-buddy forking package.Modify README.Rmd neighbor paired-buddy forking package.Propose change form pull request GitHub repository webpage (“Pull request”s tab).Propose change form pull request GitHub repository webpage (“Pull request”s tab).Accept neighbor pull request repository GitHub website, merge .Accept neighbor pull request repository GitHub website, merge .","code":""},{"path":"version-control-with-git-and-github.html","id":"issues","chapter":"2 Version control with git and GitHub","heading":"2.4.6 Issues","text":"GitHub repository, can post comment, form issue, alert developers possible bug (providing minimally reproducible example bug), question use package, ask additional feature…Ideally, propose pull request solves issue can (.e. ability time).👉 turn !Use usethis::use_github_links() add following 2 lines package DESCRIPTION file\nURL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesUse usethis::use_github_links() add following 2 lines package DESCRIPTION file\nURL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesView new changes, commit .View new changes, commit .Create output buddy’s projectCreate output buddy’s project","code":""},{"path":"version-control-with-git-and-github.html","id":"continuous-integration-ci","chapter":"2 Version control with git and GitHub","heading":"2.5 Continuous Integration (CI)","text":"change, commit, possibility introduce 1 () bugs prevent package passing CRAN R CMD CHECK. accumulate many bugs, time submitting new version CRAN many corrections make. even frustrating package passed R CMD CHECK …Continuous integration services allow check test package automatically commit ! case failure, receive email informing . number services offer (limited) free package open-source projects.Another reason use continuous integration allows test package different infrastructures (e.g. Windows, Ubuntu, Mac OS) different versions  (current, devel…)","code":""},{"path":"version-control-with-git-and-github.html","id":"github-actions","chapter":"2 Version control with git and GitHub","heading":"2.5.1 GitHub Actions","text":"GitHub Actions let launch “actions” automatically, every time push GitHub. usethis::use_github_action_check_standard() command allows initialize Github Actions add R CMD CHECK action package.👉 turn !\n1. Run command usethis::use_github_action_check_standard(), commit push changes. See happens GitHub webpage “Actions” tab.Add badge README.Rmd (nott forget knit ) code obtained 👉 console commit (push) changes.look following webpage informs different GitHub Actions available  packages: https://github.com/r-lib/actions/blob/v1/examples/README.md","code":""},{"path":"version-control-with-git-and-github.html","id":"r-hub","chapter":"2 Version control with git and GitHub","heading":"2.5.2 R-hub","text":"R consortium provides R-hub builder, ambition soon provide continuous integration service especially dedicated  packages.advantage use exact infrastructure CRAN make check package foolproof. can use devtools::check_rhub() fucntion.","code":""},{"path":"version-control-with-git-and-github.html","id":"appendix-2.1-code-coverage","chapter":"2 Version control with git and GitHub","heading":"2.6 Appendix 2.1: Code coverage","text":"covr package proposes solution measure coverage unit tests associated \npackage. test coverage determines proportion source code actually used\nexecution unit tests. Measuring coverage code reinforces reliability code gives confidence potential users.👉 turn !Run command usethis::use_coverage(), add nice badge README.md code got R consoleCommit push changes.information feel free look covr vignette.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-and-comparing-execution-times","chapter":"3 Measuring and comparing execution times","heading":"3 Measuring and comparing execution times","text":"first step optimizing code measure execution time, order compare ttimings different implementations.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-execution-times-with-system.time","chapter":"3 Measuring and comparing execution times","heading":"3.1 Measuring execution times with system.time()","text":"measure execution time R command, can use native system.time() function like :problem appears example execution fast system.time() displays 0 (close value) impossible marginally compare hopefully faster implementation. Also, see variability run command several times.Thus want compare code mvtnorm::dmvnorm() function, can’t use system.time() :say increase complexity calculation, better way: use microbenchmark package !","code":"\nsystem.time(mvnpdf(x=matrix(rep(1.96, 2), nrow=2, ncol=1), Log=FALSE))## utilisateur     système      écoulé \n##       0.001       0.001       0.003\nsystem.time(mvtnorm::dmvnorm(rep(1.96, 2)))## utilisateur     système      écoulé \n##       0.006       0.003       0.014"},{"path":"measuring-and-comparing-execution-times.html","id":"compare-execution-timings-with-microbenchmark.","chapter":"3 Measuring and comparing execution times","heading":"3.2 Compare execution timings with microbenchmark().","text":"name indicates, package allows compare execution timings even quick. Moreover, bencmarked expression repeatedly evaluated certain number times, thus stabilizing timing estimations.Botth mvnpdf() dmnvorm() functions able take matrix input, can also compare timings setting:Something happened… willfind outt issue exactly comes next.","code":"\nlibrary(microbenchmark)\nmb <- microbenchmark(mvtnorm::dmvnorm(rep(1.96, 2)),\n                     mvnpdf(x = matrix(rep(1.96,2)), \n                            Log = FALSE),\n                     times = 1000L)\nmb## Unit: microseconds\n##                                           expr    min      lq     mean  median\n##                 mvtnorm::dmvnorm(rep(1.96, 2)) 37.808 42.2135 61.07677 54.1675\n##  mvnpdf(x = matrix(rep(1.96, 2)), Log = FALSE) 35.555 39.4025 54.41783 50.3735\n##      uq      max neval cld\n##  64.854 2040.729  1000   b\n##  59.966  236.444  1000  a## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\n## use `guide = \"none\"` instead.\nn <- 100\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), \n                            Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                       expr     min      lq\n##         mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))  58.788  84.058\n##  mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 493.605 811.590\n##       mean  median      uq      max neval cld\n##   95.84951  90.074 103.494  278.326   100  a \n##  843.85842 859.757 881.789 1211.209   100   b## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\n## use `guide = \"none\"` instead."},{"path":"profiling-code.html","id":"profiling-code","chapter":"4 Profiling code","heading":"4 Profiling code","text":"Profiling determining part code take time compute (also memory-wise). found block code takes longest time execute, goal optimize small part code.get profiling code , select lines code interest go “Profile” menu “Profile Selected Lines”. uses package profis, particular profvis() function.OK, OK, get ! Concatenating vector go loop really good idea.","code":"\nn <- 10e4\npdfval <- mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)"},{"path":"profiling-code.html","id":"comparison-with-an-improved-implementtation-of-mnvpdf.","chapter":"4 Profiling code","heading":"4.1 Comparison with an improved implementtation of mnvpdf().","text":"Consider new version mvnpdf(), called mvnpdfsmart(). Download file, include package.Now profile following command:indeed removed main computational bottleneck, can now learn detailed way takes time function.confirm mvnpdfsmart() indeed much faster mvnpdf() can make comparison using microbenchmark():can also check whether mvnpdfsmart becomes competitive dmvnorm():still work done…","code":"\nn <- 10e4\npdfval <- mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)\nn <- 1000\nmb <- microbenchmark(mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), \n                            Log = FALSE),\n                     mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), \n                                 Log = FALSE),\n                     times=100L)\nmb## Unit: milliseconds\n##                                                            expr      min\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 4.407351\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3.522959\n##        lq     mean   median       uq      max neval cld\n##  5.238679 8.012965 6.318469 8.336098 23.94375   100   b\n##  3.860291 4.769534 4.006061 4.483052 13.48031   100  a## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\n## use `guide = \"none\"` instead.\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   76.515\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 4993.550\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3580.121\n##        lq      mean   median       uq      max neval cld\n##   125.492  229.9059  157.031  192.019  5729.81   100 a  \n##  5561.886 7990.3688 6338.821 7869.391 34081.58   100   c\n##  4137.552 5259.9007 4687.984 5257.547 17350.96   100  b## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\n## use `guide = \"none\"` instead."},{"path":"profiling-code.html","id":"comparison-with-an-optimized-pure-r-implementation","chapter":"4 Profiling code","heading":"4.2 Comparison with an optimized pure R implementation","text":"several research test trials errors, Boris arrived optimized version using  capabilities.Include mvnpdfoptim() function package, profile :microbenchmark() goes :Finally, can profile tthe dmvnorm() function:","code":"\nlibrary(profvis)\nn <- 10e4\nprofvis(mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE))\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   60.827\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 4438.959\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3274.578\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2386.387\n##        lq      mean    median       uq       max neval  cld\n##    87.999  135.8259  108.4365  145.361   649.756   100 a   \n##  5077.788 7204.2706 5364.9105 6793.550 28660.543   100    d\n##  3793.861 4686.3328 3956.4680 4608.849 13904.016   100   c \n##  2889.596 3589.9625 3028.6180 3506.087 11222.708   100  b## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\n## use `guide = \"none\"` instead.\nn <- 10e5\nprofvis::profvis(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)))"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"rcpp-or-how-to-easily-embed-c-code-into-a-package","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5 Rcpp or how to easily embed C++ code into a  package","text":"Rcpp (“R-C-Plus-Plus”) package facilitates interface C++ .  interpreted language, feature makes number things easy (including giving us access console can evaluate code variables fly). Nevertheless, ease use counterbalanced larger computation times comapred lower level languages C, Fortran C++ (require compilation).curious reader directed towards online book Rcpp everyone Masaki E. Tsuda, thorough complete resource understanding use Rcpp, complement introduction can found “Rcpp” section Hadley Wickham’s book Advanced R.","code":""},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"first-function-in-rcpp","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.1 First function in Rcpp","text":"👉 turn !make package ready use Rcpp, start running following command:See changes madeSee changes madeyou also add following 2 roxygen comments general help page \npackage:also add following 2 roxygen comments general help page \npackage:now going create first function Rcpp invert matrix. , use C++ library Armadillo. modern simple linear algebra library, highly optimized, interfaced  via RcppArmadillo package.C++ different language . main differences impact us:C++ efficient loops (including nested loops – ⚠️ often one order faster , due way C++ allocates walks memory).C++ efficient loops (including nested loops – ⚠️ often one order faster , due way C++ allocates walks memory).command must end semicolon ‘;’.command must end semicolon ‘;’.C++ typed language: must declare type variable can use code.C++ typed language: must declare type variable can use code.👉 turn !Create new C++ file RStudio (via File > New File > C++ File menu), save src folder. Take time read try understand line.Create new C++ file RStudio (via File > New File > C++ File menu), save src folder. Take time read try understand line.Compile load package (via “Install Restart” button) try using timesTwo() function console.Compile load package (via “Install Restart” button) try using timesTwo() function console.Install RcppArmadillo 👉 package, don’t forget make necessary additions DESCRIPTION (use usethis::use_rcpp_armadillo())Install RcppArmadillo 👉 package, don’t forget make necessary additions DESCRIPTION (use usethis::use_rcpp_armadillo())Using Hadley Wickham’s [introduction Rcpp]](http://adv-r..co.nz/Rcpp.html#rcpp-intro) book Advanced R, well documentation RcppArmadillo package C++ library Armadillo, try write short function invC() C++ computes inverse matrix.Using Hadley Wickham’s [introduction Rcpp]](http://adv-r..co.nz/Rcpp.html#rcpp-intro) book Advanced R, well documentation RcppArmadillo package C++ library Armadillo, try write short function invC() C++ computes inverse matrix.successfully compiled invC function accessible , create mvnpdf_invC() function mvnpdfsmart implementation replacing matrix inverse calculations call invC.successfully compiled invC function accessible , create mvnpdf_invC() function mvnpdfsmart implementation replacing matrix inverse calculations call invC.Evaluate performance gain new implementation mvnpdf_invC.Evaluate performance gain new implementation mvnpdf_invC.","code":"\ndevtools::use_rcpp()\n#' @useDynLib mypkgr\n#' @importFrom Rcpp sourceCpp, .registration = TRUE\nNULL\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   65.277\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 4776.539\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3584.796\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2413.233\n##  mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3245.948\n##        lq      mean   median       uq       max neval  cld\n##   114.642  160.0351  133.386  163.154   936.136   100 a   \n##  5240.599 6871.1702 5459.852 6558.235 30502.844   100    d\n##  3834.671 4536.3429 3938.327 4399.782 11566.302   100   c \n##  2858.371 3431.4853 3048.123 3408.756  9233.907   100  b  \n##  3774.597 4204.1832 3851.329 4039.721 10281.333   100   c## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\n## use `guide = \"none\"` instead.\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, \n    nrow = 2, ncol = 1000), Log=FALSE))\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, \n    nrow = 100, ncol = 1000), Log=FALSE))"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"optimize-thanks-to-c","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.2 Optimize thanks to C++","text":"general rule, much computational time gained replacing optimized  function C++ function. Indeed, base  fuunctions fact already wrappers around well optimized C Fortran routines. gain limited suppression argument checking type management (reason!).👉 turn !mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfC().mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfC().Evaluate performance gain new implementation mvnpdfC.Evaluate performance gain new implementation mvnpdfC.can download proposal mvnpdfC.cpp .Note Rcpp functions can used outside package architecture thanks Rcpp::sourceCpp() function. , seen always desirable manage one’s code inside package, unlikely need !","code":"\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfC(x=matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2), varcovM = diag(2), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                                                                  expr\n##                                                    mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))\n##                                             mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                        mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                        mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                        mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##  mvnpdfC(x = matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2),      varcovM = diag(2), Log = FALSE)\n##       min        lq       mean    median        uq        max neval cld\n##    71.892   91.7510  133.84346  116.6040  138.5720    649.959   100 a  \n##  4372.254 5014.9945 7833.95297 5239.9690 6114.8900 151265.565   100   c\n##  3215.510 3770.1800 4456.70620 3941.0185 4350.6165  11264.253   100  b \n##  2357.718 2760.5140 3497.98924 2885.9165 3361.5650  10979.782   100  b \n##  3200.297 3716.4875 4162.15007 3832.2425 4156.0180  10151.775   100  b \n##    48.402   60.7095   88.47014   72.0825   82.8135   1004.352   100 a## Warning: It is deprecated to specify `guide = FALSE` to remove a guide. Please\n## use `guide = \"none\"` instead."},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"annexe-5.1-premature-optimization-is-a-bad-idea","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.3 Annexe 5.1: premature optimization is a bad idea","text":"Chambers, Software Data Analysis: Programming R, Springer, 2008:Including additional C code serious step, added dangers often substantial amount programming debugging required. good reason.","code":""},{"path":"code-parallelization.html","id":"code-parallelization","chapter":"6  code Parallelization","heading":"6  code Parallelization","text":"","code":""},{"path":"code-parallelization.html","id":"introduction-to-parallel-execution-in","chapter":"6  code Parallelization","heading":"6.1 Introduction to parallel execution in ","text":"Apart optimizing code algorithms, another way get high performing code take advantage parallel architectures modern computers. goal parallelize one’s code order perform simultaneous operations distinct parts problem, using different computing cores. reduce total computation time needed, set operations executed faster, resulting overall user speed-.significant number algorithms -called “embarrassingly parallel”, .e. whose computations can broken several independent sub-computations. statistics, often easy straightforward parallelize according different observations different dimensions. Typically, operations can written form loop whose operations independent one iteration next.necessary operations execute code parallel follows:Start \\(m\\) “worker” processes (.e. computing cores) initialize themStart \\(m\\) “worker” processes (.e. computing cores) initialize themSend necessary functions data task workersSend necessary functions data task workersSplit tasks \\(m\\) operations similar size send workersSplit tasks \\(m\\) operations similar size send workersWait workers finish calculationsWait workers finish calculationsCollect results different workersCollect results different workersStop worker processesStop worker processesDepending platform, several communication protocols available cores. UNIX systems, Fork protocol used, available Windows PSOCK protocol used instead. Finally, distributed computing architecture cores necessarily physical processor, MPI protocol generally used. advantage future future.apply package API code can executed whatever hardware configuration.Since R 2.14.0, parallel package directly included  allows start stop cluster several worker processes (step 1 6). addition parallel package, use future package allows manage worker processes communication articulation future.apply package, turn allows manage dialogue workers (sending, receiving collecting results – steps 2, 3, 4 5).","code":""},{"path":"code-parallelization.html","id":"first-parallel-function","chapter":"6  code Parallelization","heading":"6.2 First  parallel function","text":"👉 turn !Start writing simple function computes logarithm \\(n\\) numbers:Determine many cores available computer function future::availableCores().Determine many cores available computer function future::availableCores().Using function future::plan(multisession(workers = XX)), declare “plan” parallel computations computer (taking care always leave least one core available handle processes).Using function future::plan(multisession(workers = XX)), declare “plan” parallel computations computer (taking care always leave least one core available handle processes).Using one apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Using one apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)parallel version runs much slower… fact, individual tasks fast,  spend time communicating cores actual computations.loop iteration must relatively long parallel computing provide significant gain computation time!increasing \\(n\\), observe reduction difference 2 implementations (parallel computation time increases slowly compared increase sequential function).NB: iterators itertools package efficient minimize number communications cores, can used code inside future_*apply() vectorized (always possible vectorize code inside, example function type apply).","code":"\nlibrary(microbenchmark)\nlibrary(future.apply)\n\nlog_seq <- function(x){\n  # try this yourself (spoiler alert: it is quite long...):\n  # res <- numeric(length(x))\n  # for(i in 1:length(x)){\n  #   res[i] <- log(x[i])\n  # }\n  # return(res)\n  return(log(x))\n}\n\nlog_par <- function(x){\n  res <- future_sapply(1:length(x), FUN = function(i) {\n    log(x[i])\n  })\n  return(res)\n}\n\nplan(multisession(workers = 3))\nmb <- microbenchmark(log_par(1:100), log_seq(1:100), times = 50)"},{"path":"code-parallelization.html","id":"efficient-parallelization","chapter":"6  code Parallelization","heading":"6.3 Efficient parallelization","text":"now look another use case. Let’s say large array data 10 observations 100,000 variables (e.g. genetic measurements), want compute median variables.experienced  user, operation easily implemented using apply():reality, (good) loop slower – provided nicely programmed:👉 turn !\nTry improve computation time parallelizing code:Parallelize median computation 100,000 variables. gain computation time?Parallelize median computation 100,000 variables. gain computation time?Propose alternative implementation using itertools::isplitIndices() function allows separate data (\\(n\\) numbers) many groups (batchs) cores. Compare computation times.Propose alternative implementation using itertools::isplitIndices() function allows separate data (\\(n\\) numbers) many groups (batchs) cores. Compare computation times.","code":"\nx <- matrix(rnorm(1e6), nrow = 10)\ndim(x)## [1]     10 100000\ncolmedian_apply <- function(x){\n  return(apply(x, 2, median))\n}\nsystem.time(colmedian_apply(x))## utilisateur     système      écoulé \n##       3.244       0.017       3.282\ncolmedian_for <- function(x){\n  ans <- rep(0, ncol(x)) \n  for (i in 1:ncol(x)) {\n    ans[i] <- median(x[, i]) \n  }\n  return(ans)\n}\nsystem.time(colmedian_for(x))## utilisateur     système      écoulé \n##       3.324       0.018       3.366\ncolmedian_par <- function(x){\n  res <- future_sapply(1:ncol(x), FUN = function(i) {\n          median(x[, i])\n    })\n  return(res)\n}\nplan(multisession(workers = 3))\nsystem.time(colmedian_par(x))## utilisateur     système      écoulé \n##       0.101       0.019       1.439\ncolmedian_parIter <- function(x, ncores = 1){\n  iter <- itertools::isplitIndices(n = ncol(x), chunks = ncores)\n  res <- future_sapply(iter, FUN = function(i) {\n          apply(x[, i], 2, median)\n    })\n  return(unlist(res))\n}\nsystem.time(colmedian_parIter(x, ncores = 3))## utilisateur     système      écoulé \n##       0.082       0.017       1.245\nmb <- microbenchmark(colmedian_apply(x), \n                     colmedian_for(x),\n                     colmedian_par(x),\n                     colmedian_parIter(x, ncores = 3), times = 10)\nmb## Unit: milliseconds\n##                              expr       min       lq     mean   median       uq\n##                colmedian_apply(x) 2508.9098 2629.735 2689.872 2691.283 2783.711\n##                  colmedian_for(x) 2549.3103 2574.686 2758.920 2674.481 2740.282\n##                  colmedian_par(x) 1092.2788 1123.261 1154.978 1133.733 1143.486\n##  colmedian_parIter(x, ncores = 3)  993.0038 1045.915 1129.355 1081.597 1111.276\n##       max neval cld\n##  2796.538    10   b\n##  3612.499    10   b\n##  1362.110    10  a \n##  1636.029    10  a"},{"path":"code-parallelization.html","id":"iterators","chapter":"6  code Parallelization","heading":"6.3.1 Iterators","text":"itertools package allows easily split data tasks (step 3) minimizing communication different workers. based implementation iterators . However, use requires vectorizing code inside future_*apply(). Experiment small code :","code":"\nmyiter <- itertools::isplitIndices(n = 30, chunks = 3)\n\n# a first time\niterators::nextElem(myiter)##  [1]  1  2  3  4  5  6  7  8  9 10\n# a second time... Oh ?!\niterators::nextElem(myiter)##  [1] 11 12 13 14 15 16 17 18 19 20\n# again !\niterators::nextElem(myiter)##  [1] 21 22 23 24 25 26 27 28 29 30\n# again ?\niterators::nextElem(myiter)## Error: StopIteration"},{"path":"code-parallelization.html","id":"other-plans-for-parallel-computations","chapter":"6  code Parallelization","heading":"6.3.2 Other “plans” for parallel computations","text":"run code (exactly code, one advantages future* family packages), need set “plan” computations:computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.HPC cluster (like Avakas Bordeaux), refer package future.batchtoolson HPC cluster (like Avakas Bordeaux), refer package future.batchtools","code":""},{"path":"code-parallelization.html","id":"parallélisation-dans-notre-exemple-fil-rouge","chapter":"6  code Parallelization","heading":"6.4 Parallélisation dans notre exemple fil rouge","text":"👉 turn !function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))Compare execuution timings 10 000 observationsCompare execuution timings 10 000 observations","code":"\nplan(multisession(workers = 3))\nn <- 10000\nmb <- microbenchmark::microbenchmark(\n  mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n  mypkgr::mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  mypkgr::mvnpdfoptim_par(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  mypkgr::mvnpdfoptim_parIter(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE, ncores = 3),\n  times=20L)\nmb## Unit: microseconds\n##                                                                                             expr\n##                                               mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))\n##                           mypkgr::mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                  mypkgr::mvnpdfoptim_par(x = matrix(1.96, nrow = 2, ncol = n),      Log = FALSE)\n##  mypkgr::mvnpdfoptim_parIter(x = matrix(1.96, nrow = 2, ncol = n),      Log = FALSE, ncores = 3)\n##        min         lq       mean     median         uq       max neval cld\n##    300.519   344.0155   362.6347   352.9305   392.7385    447.60    20  a \n##  24144.586 27844.8270 29340.4425 28354.5550 29700.8440  37591.64    20  ab\n##  21117.246 24406.5590 25520.3099 25217.5930 26919.3365  28695.41    20  ab\n##  20026.677 22529.1105 40802.1316 25208.0950 26377.1595 349567.61    20   b"},{"path":"code-parallelization.html","id":"conclusion","chapter":"6  code Parallelization","heading":"6.5 Conclusion","text":"Parallel computation saves time, first optimize code. parallelizing code, gain execution time depends ratio communication time effective computation time task.","code":""},{"path":"take-home-messages.html","id":"take-home-messages","chapter":"7 Take-home message(s)","heading":"7 Take-home message(s)","text":"MAKE PACKAGESMAKE PACKAGESuse git, least locally yourselfuse git, least locally yourselfif needed (.e. optimization  code ), afraid using Rcpp /parallelizing tour codeif needed (.e. optimization  code ), afraid using Rcpp /parallelizing tour code","code":""},{"path":"further-reading.html","id":"further-reading","chapter":"Further reading","heading":"Further reading","text":"Hadley Wickham’s online books truly excellent contain lot supplementary informattion covered training:\nwebsite writing packages R packages.\nwebsite Advanced R everything regarding optimization, Rcpp, parallel computing.\nwebsite R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Rmarkdown.\nHadley Wickham’s online books truly excellent contain lot supplementary informattion covered training:website writing packages R packages.website writing packages R packages.website Advanced R everything regarding optimization, Rcpp, parallel computing.website Advanced R everything regarding optimization, Rcpp, parallel computing.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Rmarkdown.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Rmarkdown.online book Rcpp everyone Masaki E. Tsuda also good.online book Rcpp everyone Masaki E. Tsuda also good.","code":""}]
