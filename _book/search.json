[{"path":"index.html","id":"course-syllabus","chapter":"Course syllabus","heading":"Course syllabus","text":"main goal course give tools ease (high-performing effcient) code development . performance side come second part, initial tools introduced also useful situations require\nimportant computation times.focus presentation development tools notion package. already familiar notion, already\nalready installed packages CRAN example ! also know standard way  distribuute code make available.\nshow package also excellent tool developing code.follow outline :Build  package useful tool code developmentBuild  package useful tool code developmentLeverage git tracking changes, GitHub sharing code, collaborative development, automating tests package broadcast companion websiteLeverage git tracking changes, GitHub sharing code, collaborative development, automating tests package broadcast companion websiteMeasure computation timeMeasure computation timeProfile codeProfile codeUse Rcpp optimize needs optimizedUse Rcpp optimize needs optimizedParallelize code easilyParallelize code easily","code":""},{"path":"index.html","id":"required-tools","chapter":"Course syllabus","heading":"Required tools","text":"take course, need following softwares installed:latest version  (https://cloud.r-project.org/)latest version  (https://cloud.r-project.org/)latest version RStudio (https://posit.co/download/rstudio-desktop/#download)latest version RStudio (https://posit.co/download/rstudio-desktop/#download)C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain detailed herea C++ compiler (gcc clang - native UNIX systems,\nWindows users recommend installing\nRtools, \nMac users may necessary install macOS tool chain detailed herethe following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe following  packages: devtools, future.apply, itertools, microbenchmark, mvtnorm, profvis, Rcpp, RcppArmadillo, roxygen2, testthat, usethisthe software git can installed following instructions Happy Git R Jenny Brianthe software git can installed following instructions Happy Git R Jenny BrianIn addition, need active internet connection (e.g.¬†eduroam)NB: case sufficient admin rights computer install tools, can instead use service Posit Cloud offered Posit (company developing RStudio) signing free plan. give access remote RStudio session necessary softwares available, leaving list packages install.","code":""},{"path":"index.html","id":"prerequisites","chapter":"Course syllabus","heading":"Prerequisites","text":"able follow along training, must comfortable following concepts:programing  within RStudio IDEwriting functions control structures, particularly loopsthe calculation density multivariate Gaussian distribution","code":""},{"path":"building-an-package.html","id":"building-an-package","chapter":"1 Building an  package","heading":"1 Building an  package","text":"present efficiently create build package using RStudio IDE, devtools usethis packages.details provided reference material subject: book R packages1 Hadley Wickham & Jennifer Bryan, freely available online.","code":""},{"path":"building-an-package.html","id":"initializing-a-package","chapter":"1 Building an  package","heading":"1.1 Initializing a package","text":"simple way, built RStudio, initialize package follow steps:üëâ turn (already)!create new project (top left File drop menu RStudio)create new project (top left File drop menu RStudio)choose ‚ÄúNew Directory‚Äùchoose ‚ÄúNew Directory‚Äùchoose ‚ÄúR package using devtools‚Äù (available, choose ‚ÄúR package‚Äù, difference ‚ÄúR package‚Äù delete unnecessary files automatically created useful)choose ‚ÄúR package using devtools‚Äù (available, choose ‚ÄúR package‚Äù, difference ‚ÄúR package‚Äù delete unnecessary files automatically created useful)give name package, example mypkgr.give name package, example mypkgr.NB: using Posit Cloud local computer, need rather execute following command  console: usethis::create_package(\".\") accept proposed overwrites., get minimal structure  package, namely:DESCRIPTION file whose Title, Version, Authors@R Description edited (parts can edited even added automatically, see )DESCRIPTION file whose Title, Version, Authors@R Description edited (parts can edited even added automatically, see )NAMESPACE file later edited automatically (hands now)NAMESPACE file later edited automatically (hands now)folder R/ add .R script filesa folder R/ add .R script filesdevtools also adds three optional files:.gitignore, relative git, version control tool see detail following section git & GitHub.gitignore, relative git, version control tool see detail following section git & GitHubmypkgr.Rproj specific file RStudio, allows define characteristics preferences project just createdmypkgr.Rproj specific file RStudio, allows define characteristics preferences project just created.Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package).Rbuildignore allows ignore files build package road (example, mypkgr.Rproj file included package)","code":""},{"path":"building-an-package.html","id":"adding-a-function-common-theme-example","chapter":"1 Building an  package","heading":"1.2 Adding a function: common theme example","text":"first invite code following function, use throughout course:want compute value density multivariate normal distribution \\(\\mathbb{R}^p\\) \\(n\\) points. function must applicable multivariate normal distribution (.e.¬†mean vector \\(\\boldsymbol\\mu\\) \\(\\mathbb{R}^p\\) variance-covariance matrix \\(\\boldsymbol\\Sigma\\) order \\(p\\)), wish compute values density evaluated \\(n\\) points \\(\\mathbf{x}\\) single call function.reminder, density function multivariate Gaussian distribution :\n\\[\\displaystyle (2\\pi )^{-p/2}\\det({\\boldsymbol {\\Sigma }})^{-1/2}\\,\\exp \\left(-{\\frac {1}{2}}(\\mathbf {x} -{\\boldsymbol {\\mu }})^{\\mathsf {T}}{\\boldsymbol {\\Sigma }}^{-1}(\\mathbf {x} -{\\boldsymbol {\\mu }})\\right)\\]need create function mvnpdf() file named mvnpdf.R R/ folder package, :takes arguments:\nx matrix, \\(n\\) columns (observations) \\(p\\) rows\nmean vector means\nvarcovM variance-covariance matrix\nLog logical parameter, default value TRUE.\ntakes arguments:x matrix, \\(n\\) columns (observations) \\(p\\) rowsx matrix, \\(n\\) columns (observations) \\(p\\) rowsmean vector meansmean vector meansvarcovM variance-covariance matrixvarcovM variance-covariance matrixLog logical parameter, default value TRUE.Log logical parameter, default value TRUE.returns list containing matrix x, vector length \\(n\\) multivariate normal distribution density values points.returns list containing matrix x, vector length \\(n\\) multivariate normal distribution density values points.üëâ turn !function proposal can download . ‚ö†Ô∏è WARNING ! click quickly link, invalidate participation class !advice writing code, see R code section Wickham & Bryan R packages (2023) Wickham & Bryan2.","code":""},{"path":"building-an-package.html","id":"documenting-a-function","chapter":"1 Building an  package","heading":"1.3 Documenting a function","text":"important properly document code. Every project least two developers:,,6 months.6 months.sake future self, favor take time document code !strongly advise use roxygen2 package document packages. main advantage help function file code defining function.üëâ turn !Start inserting skeleton helper ‚ÄúInsert Roxygen Skeleton‚Äù located ‚ÄúCode‚Äù menu Magic Wand sub-menu script window.Start inserting skeleton helper ‚ÄúInsert Roxygen Skeleton‚Äù located ‚ÄúCode‚Äù menu Magic Wand sub-menu script window.Complete documentation filling :\ntitle function (first line)\ndescription function (second paragraph)\nfill third paragraph, part go ‚ÄúDetails‚Äù section help page\nmeaning parameters\noutput, @return tag\nComplete documentation filling :title function (first line)title function (first line)description function (second paragraph)description function (second paragraph)fill third paragraph, part go ‚ÄúDetails‚Äù section help pageif fill third paragraph, part go ‚ÄúDetails‚Äù section help pagethe meaning parametersthe meaning parametersthe output, @return tagthe output, @return tagGenerate documentation using ‚ÄúDocument‚Äù ‚Äú‚Äù menu ‚ÄúBuild‚Äù tab (alternatively run devtools::document() use Ctrl+Shift+D). effect command multiple:\nman folder created inside , mvnpdf.Rd file contains help information function\nNAMESPACE file modified\nGenerate documentation using ‚ÄúDocument‚Äù ‚Äú‚Äù menu ‚ÄúBuild‚Äù tab (alternatively run devtools::document() use Ctrl+Shift+D). effect command multiple:man folder created inside , mvnpdf.Rd file contains help information functiona man folder created inside , mvnpdf.Rd file contains help information functionthe NAMESPACE file modifiedthe NAMESPACE file modifiedIn case problems curiosity done, can look proposal.details package documentation roxygen2 tags, see Object documentation section Wickham & Bryan R packages (2023)Let us finish mentioning function usethis package initializes home help page whole package:generated help page accessible, package installed, following command:","code":"\nusethis::use_package_doc()\n?mypkgr"},{"path":"building-an-package.html","id":"interactively-test-the-package","chapter":"1 Building an  package","heading":"1.4 Interactively test the package","text":"test package, load  using ‚ÄúLoad ‚Äù (Ctrl+Shift+L) ‚Äú‚Äù menu ‚ÄúBuild‚Äù tab, alternatively devtools::load_all()).can use package directly : look function help page ?mvnpdf example execute commands given example section help page.code development, can thus:Add/Modify  codeAdd/Modify  codeRe-load package Ctrl+Shift+LRe-load package Ctrl+Shift+LExperiment consoleExperiment consoleAnd ‚Ä¶‚Ä¶","code":"\n?mvndpf"},{"path":"building-an-package.html","id":"automatically-test-your-package","chapter":"1 Building an  package","heading":"1.5 Automatically test your package","text":"initialize automatic testing capabilities package, execute following command:command creates tests folder includes testthat.R file ‚Äì modified ‚Äì testthat/ folder add automated tests. tool based theory unit tests.example, content file, containing two tests, named test-mvnpdf.R put testthat folder (instead hand, can simply use helper function usethis::use_test() create file right place ):execute tests, can click ‚ÄúTest package‚Äù (Ctrl+Shift+T) ‚Äú‚Äù menu ‚ÄúBuild‚Äù tab, run devtools::test()advantage automatic tests run every time check package (see just ).good practice add unit test time bug identified fixed,\ncan immediately identify prevent error happening future.","code":"\nusethis::use_testthat()\ntest_that(\"correct result for univariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(1.96), Log=FALSE)$y, dnorm(1.96))\n  expect_equal(mvnpdf(x=matrix(c(1.96, -0.5), ncol = 2), Log=FALSE)$y,\n               dnorm(c(1.96, -0.5)))\n})\n\ntest_that(\"correct results for bivariate gaussian\", {\n  expect_equal(mvnpdf(x=matrix(rep(1.96,2), nrow=2, ncol=1), Log=FALSE)$y,\n               mvtnorm::dmvnorm(rep(1.96, 2)))\n})"},{"path":"building-an-package.html","id":"checking-your-package","chapter":"1 Building an  package","heading":"1.6 Checking your package","text":"Running check means ensuring everything package correct work expected, can installed properly various OS. ‚ÄúPassing R CMD CHECK‚Äù mandatory successfully uploading package CRAN.perform R CMD CHECK package, can click ‚ÄúCheck‚Äù (Ctrl+Shift+E) ‚ÄúBuild‚Äù tab, run devtools::check().check, automated unit tests developed previously executed. advantage written tests, don‚Äôt need worry , simply react adjust code errors returned flagged.","code":""},{"path":"building-an-package.html","id":"install-your-package","chapter":"1 Building an  package","heading":"1.7 Install your package","text":"moment, package exists environment associated RStudio project created. able use anywhere (computer)  general way, install (like CRAN package example)., click ‚ÄúInstall‚Äù (Ctrl+Shift+B) ‚ÄúBuild‚Äù tab, alternatively can run devtools::install().finally, can configure RStudio‚Äôs behavior time installation, simultaneously documents package: go ‚Äú‚Äù menu ‚ÄúBuild‚Äù tab, ‚ÄúConfigure Build Tools‚Ä¶‚Äù. click ‚ÄúConfigure‚Äù next ‚ÄúGenerate documentation Roxygen‚Äù, check box ‚ÄúInstall Restart‚Äù.","code":""},{"path":"building-an-package.html","id":"appendix-1.1-add-an-s3-method","chapter":"1 Building an  package","heading":"Appendix 1.1: add an S3 method","text":"packages, often implement called S3 methods , result object res, one can run print(res), summary(res), plot(res), ‚Ä¶example plot() method can add package:‚ö†Ô∏è WARNING ! order S3 method want apply result function mvnpdf(), declare mvnpdf() returns result class mvnpdf.Test function, executing example.Don‚Äôt forget re-install package (‚ÄúInstall‚Äù Ctrl+Shift+B).Look contents man folder changes made NAMESPACE.proposed solution: file contains complete code mvnpdf() function associated plot() method.","code":"\n#' Plot of the mvnpdf function\n#'\n#' @param x an object of class \\code{mvnpdf} resulting from a call of\n#' \\code{mnvpdf()} function.\n#' @param ... graphical parameters passed to \\code{plot()} function.\n#'\n#' @return Nothing is returned, only a plot is given.\n#' @export\n#'\n#' @examples\n#' pdfvalues <- mvnpdf(x=matrix(seq(-3, 3, by = 0.1), nrow = 1), Log=FALSE)\n#' plot(pdfvalues)\nplot.mvnpdf <- function(x, ...) {\n  plot(x$x, x$y, type = \"l\", ...)\n}"},{"path":"building-an-package.html","id":"appendix-1.2-submit-ones-package-on-cran","chapter":"1 Building an  package","heading":"Appendix 1.2: submit one‚Äôs package on CRAN","text":"Run two following commands: devtools::check() followed devtools::submit_cran().\ndetails, see Wickham & Bryan‚Äôs recommended pipeline book R packages","code":""},{"path":"version-control-with-git-and-github.html","id":"version-control-with-git-and-github","chapter":"2 Version control with git and GitHub","heading":"2 Version control with git and GitHub","text":"interested solutions offered RStudio GitHub hosting version control projects. allows monitor changes history, help collaborative development facilitate continuous integration.","code":""},{"path":"version-control-with-git-and-github.html","id":"principles-of-version-control","chapter":"2 Version control with git and GitHub","heading":"2.1 Principles of version control","text":"principle version control record successive changes made files (especially .R files case).RStudio offers 2 integrated solutions version control:gitgitsvn (‚Äúsubversion‚Äù)svn (‚Äúsubversion‚Äù)","code":""},{"path":"version-control-with-git-and-github.html","id":"git","chapter":"2 Version control with git and GitHub","heading":"2.1.1 git","text":"git version control software (.e.¬†tool record history successive changes code allow share changes people). git command line program, necessarily intuitive use.git works follows: remote server (e.g.¬†cloud), updated version code available. time possible access version code online. contributor can download last updated version (action called pull), editing locally. changes made locally, contributor can update online version code, changes become available everyone (action called push).NB: git designed lightweight files (text files) far optimized heavy /compressed files (e.g.¬†.RData files).","code":""},{"path":"version-control-with-git-and-github.html","id":"subversion","chapter":"2 Version control with git and GitHub","heading":"2.1.2 subversion","text":"subversion solution available RStudio. works similar way git, less features won‚Äôt detail (major difference contributors work simultaneously version code).","code":""},{"path":"version-control-with-git-and-github.html","id":"use-git-locally-within-rstudio","chapter":"2 Version control with git and GitHub","heading":"2.2 Use git locally within RStudio","text":"üëâ turn !Start enabling git ‚ÄúGit/SVN‚Äù tab ‚ÄúProject Options‚Äù located ‚ÄúTools‚Äù menu follow instructions. can also run usethis::use_git()  console alternatively.Start enabling git ‚ÄúGit/SVN‚Äù tab ‚ÄúProject Options‚Äù located ‚ÄúTools‚Äù menu follow instructions. can also run usethis::use_git()  console alternatively.‚ÄúGit‚Äù tab now appears next ‚ÄúBuild‚Äù tab,\nregister current state package making first commit:‚ÄúGit‚Äù tab now appears next ‚ÄúBuild‚Äù tab,\nregister current state package making first commit:2a. Select files track (select .Rproj file)2a. Select files track (select .Rproj file)2b. write informative message (collaborators ‚Äì includes future self)2b. write informative message (collaborators ‚Äì includes future self)2c. click ‚ÄúCommit‚Äù2c. click ‚ÄúCommit‚Äù2d. first time using git computer, might prompted error looks something like :\n         *** Please tell .\n\n         Run\n\n         git config --global user.email \"@example.com\"\n         git config --global user.name \"Name\"\nsolve , run following command  console user.name email filled : usethis::use_git_config(user.name = \"FirstName LastName\", user.email = \"@email.com\")2d. first time using git computer, might prompted error looks something like :solve , run following command  console user.name email filled : usethis::use_git_config(user.name = \"FirstName LastName\", user.email = \"@email.com\")Add ‚Äú*.Rproj‚Äù line ‚Äú.gitignore‚Äù file make new commitVisualize changes history using visualization tools\n‚ÄúDiff‚Äù ‚ÄúHistory‚Äù tools accessible ‚ÄúGit‚Äù tab","code":"         *** Please tell me who you are.\n\n         Run\n\n         git config --global user.email \"you@example.com\"\n         git config --global user.name \"Your Name\""},{"path":"version-control-with-git-and-github.html","id":"good-commit-practices","chapter":"2 Version control with git and GitHub","heading":"2.2.1 Good commit practices","text":"Ideally, commit solve one problem. fix entirety (complete), contain changes related problem (minimal). especially useful write informative commit messages (kind help collaborators, includes future self). also concise, describe reasons changes rather changes (visible Diff).NB: sometimes difficult follow guidelines letter, merely ideal guide. certainly prevent regularly making commits.hand, temptation ‚Äúclean‚Äù tidy change-history natural, source unnecessary problems. contradicts traceability goal version control. Since code development generally complex, messy, non-linear intellectual process, normal recording changes reflects path. practice, future self first user change history, priority make easier future solving bugs extending functionality.","code":""},{"path":"version-control-with-git-and-github.html","id":"github","chapter":"2 Version control with git and GitHub","heading":"2.3 GitHub","text":"GitHub website offering online code hosting solution, based git. many alternative websites services (GitLab, Bitbucket, ‚Ä¶) allowing host code also based git. GitHub popular  community, relatively easy use, even novice user.Advantages using GitHub:simple user-friendly graphical interface track history changes codea simple user-friendly graphical interface track history changes codethe latest development version code available online can reference (can even reference specific commit number freeze specific version code)latest development version code available online can reference (can even reference specific commit number freeze specific version code)users clear transparent channel report bugs/difficultiesusers clear transparent channel report bugs/difficultiesit greatly facilitates collaborative developmentit greatly facilitates collaborative development","code":""},{"path":"version-control-with-git-and-github.html","id":"upload-ones-package-onto-github","chapter":"2 Version control with git and GitHub","heading":"2.3.1 Upload one‚Äôs package  onto GitHub","text":"üëâ turn !Go https://github.com/ create GitHub account (hesitate, common convention use firstnamelastname username)Run usethis::use_github()  console follow instructions.Add README.Rmd file package order nice home page GitHub:\n3a. RStudio, run command usethis::use_readme_rmd()\n3b. using ‚ÄúDiff‚Äù tool ‚ÄúGit‚Äù tab RStudio, review changes made previous command\n3c. edit created README.Rmd file, create corresponding README.md file running knitr (click wool ball ‚ÄúKnit‚Äù top left RStudio), making 3rd commit containing changes\n3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click ‚ÄúPush‚Äù ‚ÄúGit‚Äù tab. Now, changes 3rd commit visible online GitHub.\n3a. RStudio, run command usethis::use_readme_rmd()3b. using ‚ÄúDiff‚Äù tool ‚ÄúGit‚Äù tab RStudio, review changes made previous command3c. edit created README.Rmd file, create corresponding README.md file running knitr (click wool ball ‚ÄúKnit‚Äù top left RStudio), making 3rd commit containing changes3d. point, visit directory page GitHub, 3rd commit appear moment. synchronize online GitHub directory local folder. , click ‚ÄúPush‚Äù ‚ÄúGit‚Äù tab. Now, changes 3rd commit visible online GitHub.","code":""},{"path":"version-control-with-git-and-github.html","id":"collaborative-code-production","chapter":"2 Version control with git and GitHub","heading":"2.4 Collaborative code production","text":"git GitHub particularly useful efficient several people collaborate develop code together. Indeed, everyone can pull push successive changes code, simultaneously, endusing always working latest version code. see different concepts useful case collaborative work.üëâ turn !pairing-another participant, add new buddy ‚Äúcollaborator‚Äù GitHub directory ‚ÄúSettings‚Äù tab GitHub.pairing-another participant, add new buddy ‚Äúcollaborator‚Äù GitHub directory ‚ÄúSettings‚Äù tab GitHub.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.moments later, added collaborator receives email inviting accept addition (check spam folder). Click link accept.RStudio, create new project form git using https url buddy‚Äôs project.RStudio, create new project form git using https url buddy‚Äôs project.","code":""},{"path":"version-control-with-git-and-github.html","id":"branches","chapter":"2 Version control with git and GitHub","heading":"2.4.1 Branches","text":"useful features git branches. allows make important changes changes code without disrupting current operation. particularly useful explore development path don‚Äôt know successful end.way, already using branches since beginning part. Indeed, default branch called ‚Äúmain‚Äù (sometimes ‚Äúmaster‚Äù).Thanks system branches, obtain tree different commits time (nodes correspond separation branches).","code":""},{"path":"version-control-with-git-and-github.html","id":"merge","chapter":"2 Version control with git and GitHub","heading":"2.4.2 Merge","text":"-called ‚Äúpull‚Äù can decomposed 2 actions made git:first fetch, corresponds downloading online codefirst fetch, corresponds downloading online codeimmediately followed merge, merges local version downloaded changes.immediately followed merge, merges local version downloaded changes.conducting experimental development one branch one may want merge changes ‚Äúmaster‚Äù branch example, experiment proved successful.changes concern separate parts code, merging can done without problem. hand, two versions merged contain changes concern lines code since last common commit , encounter one () conflicts, manually resolved.","code":""},{"path":"version-control-with-git-and-github.html","id":"conflicts","chapter":"2 Version control with git and GitHub","heading":"2.4.3 Conflicts","text":"Let‚Äôs take following example: developer \\(D_1\\) developer \\(D_2\\) pulled version v0.1 code time \\(t\\) respective machines. work independently make changes code. pushing /changes, developer \\(D_2\\) receives error message:\"Sync Error.Please resolve conflicted files, commit, try syncing .\"Chaque fichier √©tant source de conflit alors √©t√© automatiquement √©dit√© comme suit :order solve conflict, manually carefully edit file one one, choosing whether keep local online version code, can commit , finally successfully push changes online.üëâ turn !Edit README.Rmd file paired buddy, commit change, finally push .buddy modified README.Rmd modify file line (make sure discussing together), WITHOUT pulling buddy‚Äôs changes first! Commit try push changes.Resolve conflict.NB: real life want avoid situation always pull pushing, purposedly opposite sake providing example demystifying conflicts.","code":"<<<<<<< HEAD\nlocal code\n=======\nonline code\n>>>>>>> remote"},{"path":"version-control-with-git-and-github.html","id":"fork","chapter":"2 Version control with git and GitHub","heading":"2.4.4 Fork","text":"fork allows create copy available code repository. Thus original code impacted changes. like creating branch, severing tree, can assume ownership . also called ‚Äúcutting‚Äù continue metaphor‚Ä¶action mainly useful pull requests (see next).","code":""},{"path":"version-control-with-git-and-github.html","id":"pull-request","chapter":"2 Version control with git and GitHub","heading":"2.4.5 Pull request","text":"Pull requests easiest way propose changes code project contributor . GitHub provides graphical interface makes easy .üëâ turn !Modify README.Rmd neighbor paired-buddy forking package.Modify README.Rmd neighbor paired-buddy forking package.Propose change form pull request GitHub repository webpage (‚ÄúPull request‚Äùs tab).Propose change form pull request GitHub repository webpage (‚ÄúPull request‚Äùs tab).Accept neighbor pull request repository GitHub website, merge .Accept neighbor pull request repository GitHub website, merge .","code":""},{"path":"version-control-with-git-and-github.html","id":"issues","chapter":"2 Version control with git and GitHub","heading":"2.4.6 Issues","text":"GitHub repository, can post comment, form issue, alert developers possible bug (providing minimally reproducible example bug), question use package, ask additional feature‚Ä¶Ideally, propose pull request solves issue can (.e.¬†ability time).üëâ turn !Use usethis::use_github_links() add following 2 lines package DESCRIPTION file:URL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesUse usethis::use_github_links() add following 2 lines package DESCRIPTION file:URL: http://github.com/*username*/mypkgBugReports: http://github.com/*username*/mypkg/issuesView new changes, commit .View new changes, commit .Create issue paired buddy‚Äôs projectCreate issue paired buddy‚Äôs project","code":""},{"path":"version-control-with-git-and-github.html","id":"continuous-integration-ci","chapter":"2 Version control with git and GitHub","heading":"2.5 Continuous Integration (CI)","text":"change, commit, possibility introduce 1 () bugs prevent package passing CRAN R CMD CHECK. accumulate many bugs, time submitting new version CRAN many corrections make. even frustrating package passed R CMD CHECK ‚Ä¶Continuous integration services allow check test package automatically commit ! case failure, receive email informing . number services offer (limited) free package open-source projects.Another reason use continuous integration allows test package different infrastructures (e.g.¬†Windows, Ubuntu, Mac OS) different versions  (current, devel‚Ä¶)","code":""},{"path":"version-control-with-git-and-github.html","id":"github-actions","chapter":"2 Version control with git and GitHub","heading":"2.5.1 GitHub Actions","text":"GitHub Actions let launch ‚Äúactions‚Äù automatically, every time push GitHub. usethis::use_github_action(\"check-standard\") command allows initialize Github Actions add R CMD CHECK action package.üëâ turn !Run command usethis::use_github_action(\"check-standard\"), commit push changes. See happens GitHub webpage ‚ÄúActions‚Äù tab.Run command usethis::use_github_action(\"check-standard\"), commit push changes. See happens GitHub webpage ‚ÄúActions‚Äù tab.Add badge README.Rmd (forget knit ) code obtained console commit (push) changes.Add badge README.Rmd (forget knit ) code obtained console commit (push) changes.look following webpage informs different GitHub Actions available  packages: https://github.com/r-lib/actions/blob/v2-branch/examples/README.md","code":""},{"path":"version-control-with-git-and-github.html","id":"build-and-deploy-a-companion-website-for-ones-package","chapter":"2 Version control with git and GitHub","heading":"2.6 Build and deploy a companion website for one‚Äôs package","text":"pkgdown  package automatically generate nice website gathering documentation package (including Vignettes).üëâ √Ä vous de jouer !Run usethis::use_pkgdown_github_pages()  console.Run usethis::use_pkgdown_github_pages()  console.Commit & push changes. Go GitHub Actions taband see new.Commit & push changes. Go GitHub Actions taband see new.üëâ √Ä vous de jouer !Examiner les changement du fichier DESCRIPTION suite √† l‚Äôexecution des diff√©rentes commandes usethis::use_... pr√©cedemment.Modifier le champ URL du fichier DESCRIPTION.","code":""},{"path":"version-control-with-git-and-github.html","id":"additional-references","chapter":"2 Version control with git and GitHub","heading":"2.7 Additional References","text":"Happy Git R Jenny Bryan.Happy Git R Jenny Bryan.Jennifer Bryan (2018). Excuse , Moment Talk Version Control? American Statistician 72 (1):20‚Äì27.DOI: 10.1080/00031305.2017.1399928Jennifer Bryan (2018). Excuse , Moment Talk Version Control? American Statistician 72 (1):20‚Äì27.DOI: 10.1080/00031305.2017.1399928","code":""},{"path":"version-control-with-git-and-github.html","id":"appendix-2.1-r-hub","chapter":"2 Version control with git and GitHub","heading":"Appendix 2.1: R-hub","text":"R consortium provides R-hub builder, ambition one day provide continuous integration service especially dedicated  packages.advantage use exact infrastructure CRAN make check package foolproof. can use devtools::check_rhub() function.","code":""},{"path":"version-control-with-git-and-github.html","id":"appendix-2.2-code-coverage","chapter":"2 Version control with git and GitHub","heading":"Appendix 2.2: Code coverage","text":"covr package proposes solution measure coverage unit tests associated package. test coverage determines proportion source code actually used execution unit tests. Measuring coverage code reinforces reliability code gives confidence potential users.üëâ turn !Run command usethis::use_coverage(), add nice badge README.md code got R console.Run command use_github_action(\"test-coverage\") trigger GitHub Actions compute coverage package.Commit push changes.information feel free look covr vignette.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-and-comparing-execution-times","chapter":"3 Measuring and comparing execution times","heading":"3 Measuring and comparing execution times","text":"first step optimizing code measure execution time, order compare timings different implementations.section following refer book Advanced R Hadley Wickham 3, freely available online.","code":""},{"path":"measuring-and-comparing-execution-times.html","id":"measuring-execution-times-with-system.time","chapter":"3 Measuring and comparing execution times","heading":"3.1 Measuring execution times with system.time()","text":"measure execution time  command, can use native system.time() function like :problem appears example execution fast system.time() displays 0 (close value) impossible compare hopefully faster implementation. Also, see variability run command several times.Thus want compare code mvtnorm::dmvnorm() function, can‚Äôt use system.time():imagine need increase complexity calculation able compare , actually better way: use microbenchmark package !","code":"\nobs <- matrix(rep(1.96, 2), nrow=2, ncol=1)\nsystem.time(mvnpdf(x=obs, Log=FALSE))## utilisateur     syst√®me      √©coul√© \n##       0.001       0.000       0.001\nobs <- rep(1.96, 2)\nsystem.time(mvtnorm::dmvnorm(obs))## utilisateur     syst√®me      √©coul√© \n##       0.005       0.000       0.005"},{"path":"measuring-and-comparing-execution-times.html","id":"compare-execution-times-with-microbenchmark","chapter":"3 Measuring and comparing execution times","heading":"3.2 Compare execution times with microbenchmark()","text":"name indicates, package allows compare execution times even fast. Moreover, benchmarked expression repeatedly evaluated certain number times, thus stabilizing timing estimations.mvnpdf() dmnvorm() functions able take matrix input, can also compare speeds setting:Something happened‚Ä¶ find exactly causing issue comes next.","code":"\nlibrary(microbenchmark)\nmb <- microbenchmark(mvtnorm::dmvnorm(rep(1.96, 2)),\n                     mvnpdf(x = matrix(rep(1.96,2)), Log = FALSE),\n                     times = 1000)\nmb## Unit: microseconds\n##                                           expr    min      lq     mean  median\n##                 mvtnorm::dmvnorm(rep(1.96, 2)) 38.912 42.0435 47.49666 43.5305\n##  mvnpdf(x = matrix(rep(1.96, 2)), Log = FALSE) 34.802 37.4470 40.59508 39.3230\n##      uq      max neval cld\n##  45.609 2430.480  1000  a \n##  41.265  129.158  1000   b\nn <- 100\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), \n                            Log=FALSE),\n                     times=100)\nmb## Unit: microseconds\n##                                                       expr     min       lq\n##         mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))  45.365  53.9195\n##  mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 454.013 465.9035\n##       mean  median      uq      max neval cld\n##   80.48911  66.086 104.635  179.170   100  a \n##  648.28096 505.936 788.913 1157.664   100   b"},{"path":"profiling-code.html","id":"profiling-code","chapter":"4 Profiling code","heading":"4 Profiling code","text":"Profiling determining part code take time compute (also memory-wise). found block code takes longest time execute, goal optimize small part code.get profiling code , select lines code interest go ‚ÄúProfile‚Äù menu ‚ÄúProfile Selected Lines‚Äù. uses package profvis, particular profvis() function.OK, OK, get ! Concatenating vector go loop really good idea.","code":"\nn <- 10e4\npdfval <- mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)"},{"path":"profiling-code.html","id":"comparison-with-an-improved-implementtation-of-mnvpdf.","chapter":"4 Profiling code","heading":"4.1 Comparison with an improved implementtation of mnvpdf().","text":"Consider new version mvnpdf(), called mvnpdfsmart(). Download file, include package.Now profile following command:indeed removed main computational bottleneck, can now learn detailed way takes time function.confirm mvnpdfsmart() indeed much faster mvnpdf() can make comparison using microbenchmark():can also check whether mvnpdfsmart() becomes competitive dmvnorm():still work done‚Ä¶","code":"\nn <- 10e4\npdfval <- mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE)\nn <- 1000\nmb <- microbenchmark(mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE),\n                     mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n),\n                                 Log = FALSE),\n                     times=100L)\nmb## Unit: milliseconds\n##                                                            expr      min\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 5.061469\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3.923637\n##        lq     mean   median       uq       max neval cld\n##  5.141210 5.665827 5.211503 5.287777 12.626197   100  a \n##  3.988925 4.150970 4.052459 4.130521  8.904085   100   b\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   75.813\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 5030.474\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3900.897\n##        lq      mean    median        uq       max neval cld\n##    89.899  121.5777  123.2355  140.3975   241.946   100 a  \n##  5116.988 5612.4401 5180.3295 5311.3685 10749.771   100  b \n##  3966.034 4345.4310 4023.4540 4191.3470 12945.710   100   c"},{"path":"profiling-code.html","id":"comparison-with-an-optimized-pure-implementation","chapter":"4 Profiling code","heading":"4.2 Comparison with an optimized pure  implementation","text":"several research, tests, trials errors, Boris arrived optimized version using  capabilities.Include mvnpdfoptim() function package, profile :microbenchmark() goes :Finally, can profile dmvnorm() function:","code":"\nn <- 10e4\nprofvis::profvis(mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE))\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   74.835\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 5085.217\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3904.011\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2973.211\n##        lq      mean   median       uq       max neval  cld\n##    90.695  129.3475  125.761  141.212   818.464   100 a   \n##  5198.342 5688.1403 5247.023 5410.470 10514.412   100  b  \n##  3976.171 4126.0666 4083.623 4180.598  5575.168   100   c \n##  3072.617 3394.9593 3150.861 3302.904  8882.132   100    d\nn <- 10e5\nlibrary(mvtnorm)\nprofvis::profvis(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)))"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"rcpp-or-how-to-easily-embed-c-code-into-a-package","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5 Rcpp or how to easily embed C++ code into a  package","text":"Rcpp (‚ÄúR-C-Plus-Plus‚Äù) package facilitates interface C++ .  interpreted language, feature makes number things easy (including giving us access console can evaluate code variables fly). Nevertheless, ease use counterbalanced larger computation times comapred lower level languages C, Fortran C++ (require compilation).curious reader directed towards online book Rcpp everyone Masaki E. Tsuda, thorough complete resource understanding use Rcpp, complement introduction can found ‚ÄúRcpp‚Äù section Hadley Wickham‚Äôs book Advanced R4.","code":""},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"first-function-in-rcpp","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.1 First function in Rcpp","text":"üëâ turn !make package ready use Rcpp, start running following command:\n\nusethis::use_rcpp()make package ready use Rcpp, start running following command:See changes madeSee changes madeYou also add following 2 Roxygen comments general help page package, indicated console:\n\n#' @useDynLib mypkgr\n#' @importFrom Rcpp sourceCpp, .registration = TRUE\nNULLYou also add following 2 Roxygen comments general help page package, indicated console:now going create first function Rcpp invert matrix. , use C++ library Armadillo. modern simple linear algebra library, highly optimized, interfaced  via RcppArmadillo package.C++ different language . main differences impact us:C++ efficient loops (including nested loops ‚Äì ‚ö†Ô∏è often one order faster , due way C++ allocates walks memory).C++ efficient loops (including nested loops ‚Äì ‚ö†Ô∏è often one order faster , due way C++ allocates walks memory).command must end semicolon ;.command must end semicolon ;.C++ typed language: must declare type variable can use code.C++ typed language: must declare type variable can use code.üëâ turn !Create new C++ file RStudio (via File > New File > C++ File menu), save src folder. Take time read try understand line.Compile load package (via ‚ÄúInstall Restart‚Äù button) try using timesTwo() function console.Install RcppArmadillo üëâ package, don‚Äôt forget make necessary additions DESCRIPTION (use usethis::use_rcpp_armadillo())Using Hadley Wickham‚Äôs introduction Rcpp book Advanced R, well documentation RcppArmadillo package C++ library Armadillo, try write short function invC() C++ computes inverse matrix.successfully compiled invC function accessible , create mvnpdf_invC() function mvnpdfsmart implementation replacing matrix inverse calculations call invC.Evaluate performance gain new implementation mvnpdf_invC.","code":"\nusethis::use_rcpp()\n#' @useDynLib mypkgr\n#' @importFrom Rcpp sourceCpp, .registration = TRUE\nNULL\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     times=100L)\nmb\n## Unit: microseconds\n##                                                            expr      min\n##              mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))   77.096\n##       mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 5112.602\n##  mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3903.177\n##  mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 2999.092\n##  mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE) 3870.031\n##         lq      mean    median       uq       max neval  cld\n##   114.1905  130.7413  134.5835  144.804   254.141   100 a   \n##  5240.9030 5427.6820 5317.5275 5443.159  9967.397   100  b  \n##  3981.7490 4328.0217 4059.0335 4148.767 10066.172   100   c \n##  3113.7890 3592.3180 3212.0440 3343.341 12306.020   100    d\n##  3981.5515 4139.9227 4061.1910 4166.440  8376.026   100   c"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"optimize-thanks-to-c","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"5.2 Optimize thanks to C++","text":"general rule, much computational time gained replacing optimized  function C++ function. Indeed, base  functions fact already wrappers around well optimized C Fortran routines. gain limited suppression argument checking type management (reason!).üëâ turn !mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfsmartC().mvnpdfsmart, propose complete implementation C++ computating density multivariate Normal distribution mvnpdfsmartC().Evaluate performance gain new implementation mvnpdfsmartC.Evaluate performance gain new implementation mvnpdfsmartC.can download proposal mvnpdfsmartC.cpp .(relatively small) additional speed gain (cost code readability!), can look optimized Armadillo C++ implementation mvnpdfoptimC.cpp.Note Rcpp functions can used outside package architecture thanks Rcpp::sourceCpp() function. , seen always desirable manage one‚Äôs code inside package, unlikely need !","code":"\nn <- 1000\nmb <- microbenchmark(mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2)),\n                     mvnpdf(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfoptim(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdf_invC(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n                     mvnpdfsmartC(x=matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2), varcovM = diag(2), Log=FALSE),\n                     mvnpdfoptimC(x=matrix(1.96, nrow = 2, ncol = n), mean = rep(0, 2), varcovM = diag(2), Log=FALSE),\n                     times=100L)\nmb## Unit: microseconds\n##                                                                                                       expr\n##                                                         mvtnorm::dmvnorm(matrix(1.96, nrow = n, ncol = 2))\n##                                                  mvnpdf(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdfoptim(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##                                             mvnpdf_invC(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##  mvnpdfsmartC(x = matrix(1.96, nrow = 2, ncol = n), mean = rep(0,      2), varcovM = diag(2), Log = FALSE)\n##  mvnpdfoptimC(x = matrix(1.96, nrow = 2, ncol = n), mean = rep(0,      2), varcovM = diag(2), Log = FALSE)\n##       min        lq       mean    median        uq       max neval  cld\n##    75.706  121.4145  167.46735  146.6510  188.9005   719.407   100 a   \n##  5142.182 5378.2755 6980.33303 7067.3845 7820.4430 13338.981   100  b  \n##  3923.655 4147.4145 5558.95994 5594.5510 5985.4290 14381.682   100   c \n##  3020.079 3223.6090 4277.19330 4430.6980 4737.0280 14740.644   100    d\n##  3889.074 4091.3750 5322.30841 5416.6015 5887.9595 12952.043   100   c \n##    93.564  104.7260  673.46082  126.5590  152.1395 25130.594   100 a   \n##    35.294   53.2015   77.12444   61.2975   72.7895   723.663   100 a"},{"path":"rcpp-or-how-to-easily-embed-c-code-into-a-package.html","id":"annexe-5.1-premature-optimization-is-a-bad-idea","chapter":"5 Rcpp or how to easily embed C++ code into a  package","heading":"Annexe 5.1: premature optimization is a bad idea","text":"Chambers, Software Data Analysis: Programming R, Springer, 2008:‚ÄúIncluding additional C code serious step, added dangers often substantial amount programming debugging required. good reason.‚Äù","code":""},{"path":"r-code-parallelization.html","id":"r-code-parallelization","chapter":"6 R code Parallelization","heading":"6 R code Parallelization","text":"","code":""},{"path":"r-code-parallelization.html","id":"introduction-to-parallel-execution-in","chapter":"6 R code Parallelization","heading":"6.1 Introduction to parallel execution in ","text":"Apart optimizing code algorithms, another way get high performing code take advantage parallel architectures modern computers. goal parallelize one‚Äôs code order perform simultaneous operations distinct parts problem, using different computing cores. reduce total computation time needed, set operations executed faster, resulting overall user speed-.significant number algorithms -called ‚Äúembarrassingly parallel‚Äù, .e.¬†whose computations can broken several independent sub-computations. statistics, often easy straightforward parallelize according different observations different dimensions. Typically, operations can written form loop whose operations independent one iteration next.necessary operations execute code parallel follows:Start \\(m\\) ‚Äúworker‚Äù processes (.e.¬†computing cores) initialize themStart \\(m\\) ‚Äúworker‚Äù processes (.e.¬†computing cores) initialize themSend necessary functions data task workersSend necessary functions data task workersSplit tasks \\(m\\) operations similar size send workersSplit tasks \\(m\\) operations similar size send workersWait workers finish calculationsWait workers finish calculationsCollect results different workersCollect results different workersStop worker processesStop worker processesDepending platform, several communication protocols available cores. UNIX systems, Fork protocol used, available Windows PSOCK protocol used instead. Finally, distributed computing architecture cores necessarily physical processor, MPI protocol generally used. advantage future future.apply package code can executed whatever hardware configuration.Since R 2.14.0, parallel package directly included  allows start stop cluster several worker processes (step 1 6). addition parallel package, use future package allows manage worker processes communication articulation future.apply package, turn allows manage dialogue workers (sending, receiving collecting results ‚Äì steps 2, 3, 4 5).","code":""},{"path":"r-code-parallelization.html","id":"first-parallel-function","chapter":"6 R code Parallelization","heading":"6.2 First  parallel function","text":"üëâ turn !Start writing simple function computes logarithm \\(n\\) numbers:Determine many cores available computer function future::availableCores().Determine many cores available computer function future::availableCores().Using function future::plan(multisession(workers = XX)), declare ‚Äúplan‚Äù parallel computations computer (taking care always leave least one core available handle processes).Using function future::plan(multisession(workers = XX)), declare ‚Äúplan‚Äù parallel computations computer (taking care always leave least one core available handle processes).Using one *apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Using one *apply functions future.apply::future_*apply(), compute log \\(n\\) numbers parallel concatenate results vector.Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)Compare execution time sequential function first 100 integers, using command :microbenchmark(log_par(1:100), log_seq(1:100), times=10)parallel version runs much slower‚Ä¶ fact, individual tasks fast,  spend time communicating cores actual computations.loop iteration must relatively long parallel computing provide significant gain computation time!increasing \\(n\\), observe reduction difference 2 implementations (parallel computation time increases slowly compared increase sequential function).","code":"\nlibrary(microbenchmark)\nlibrary(future.apply)\n\nlog_seq <- function(x){\n  # try this yourself (spoiler alert: it is quite long...):\n  # res <- numeric(length(x))\n  # for(i in 1:length(x)){\n  #   res[i] <- log(x[i])\n  # }\n  # return(res)\n  return(log(x))\n}\n\nlog_par <- function(x){\n  res <- future_sapply(1:length(x), FUN = function(i) {\n    log(x[i])\n  })\n  return(res)\n}\n\nplan(multisession(workers = 3))\nmb <- microbenchmark(log_par(1:100), log_seq(1:100), times = 50)"},{"path":"r-code-parallelization.html","id":"efficient-parallelization","chapter":"6 R code Parallelization","heading":"6.3 Efficient parallelization","text":"now look another use case. Let‚Äôs say large array data 10 observations 100,000 variables (e.g.¬†genetic measurements), want compute median variables.experienced  user, operation easily implemented using apply():reality, (good) loop slower ‚Äì provided nicely programmed:üëâ turn !\nTry improve computation time parallelizing code 100,000 variables. gain computation time?","code":"\nx <- matrix(rnorm(1e6), nrow = 10)\ndim(x)## [1]     10 100000\ncolmedian_apply <- function(x){\n  return(apply(x, 2, median))\n}\nsystem.time(colmedian_apply(x))## utilisateur     syst√®me      √©coul√© \n##       4.544       0.000       4.545\ncolmedian_for <- function(x){\n  ans <- rep(0, ncol(x)) \n  for (i in 1:ncol(x)) {\n    ans[i] <- median(x[, i]) \n  }\n  return(ans)\n}\nsystem.time(colmedian_for(x))## utilisateur     syst√®me      √©coul√© \n##        2.94        0.00        2.94\ncolmedian_par <- function(x){\n  res <- future_sapply(1:ncol(x), FUN = function(i) {\n          median(x[, i])\n    })\n  return(res)\n}\nplan(multisession(workers = 3))\nsystem.time(colmedian_par(x))## utilisateur     syst√®me      √©coul√© \n##       0.329       0.017       2.096\nmb <- microbenchmark(colmedian_apply(x), \n                     colmedian_for(x),\n                     colmedian_par(x), \n                     times = 10)\nmb## Unit: seconds\n##                expr      min       lq     mean   median       uq      max neval\n##  colmedian_apply(x) 2.754920 2.851908 2.988178 2.946747 3.060395 3.386364    10\n##    colmedian_for(x) 2.782954 2.824968 2.963616 2.952263 3.023186 3.355388    10\n##    colmedian_par(x) 1.911639 1.935168 2.017947 2.045730 2.079367 2.113270    10\n##  cld\n##   a \n##   a \n##    b"},{"path":"r-code-parallelization.html","id":"other-plans-for-parallel-computations","chapter":"6 R code Parallelization","heading":"6.3.1 Other ‚Äúplans‚Äù for parallel computations","text":"run code (exactly code, one advantages future* family packages), need set ‚Äúplan‚Äù computations:computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.computer (single computer server) Unix (Linux, Mac OS), can use plan(multicore(workers = XX)) often efficient. multisession plan always works.HPC cluster (like CURTA Bordeaux), refer package future.batchtoolson HPC cluster (like CURTA Bordeaux), refer package future.batchtools","code":""},{"path":"r-code-parallelization.html","id":"parallelization-in-our-common-theme-example","chapter":"6 R code Parallelization","heading":"6.4 Parallelization in our common theme example","text":"üëâ turn !function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))function mvnpdfoptim() /mvnpdfsmart(), propose implementation parallelizing computations observations (columns \\(x\\))Compare execution times 10 000 observationsCompare execution times 10 000 observationsYou can download proposed implementation mvnpdfsmart_par .example, computation time one iteration really fast parallel version efficient. artificially add time iteration illustrate gain parallel computing example.can finally clone (download fork) GitHub repository get different implementations directly.","code":"\nplan(multisession(workers = 3))\nn <- 10000\nmb <- microbenchmark::microbenchmark(\n  mypkgr::mvnpdfsmart(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  mypkgr::mvnpdfsmart_par(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE),\n  times=20)\nmb## Unit: milliseconds\n##                                                                             expr\n##           mypkgr::mvnpdfsmart(x = matrix(1.96, nrow = 2, ncol = n), Log = FALSE)\n##  mypkgr::mvnpdfsmart_par(x = matrix(1.96, nrow = 2, ncol = n),      Log = FALSE)\n##        min        lq      mean    median        uq       max neval cld\n##   39.48103  40.28131  42.28041  40.80733  44.37048  50.38905    20  a \n##  504.27275 540.01656 608.97999 581.00749 661.21792 983.32301    20   b\nplan(multisession(workers = 3))\nn <- 10000\nsystem.time(mypkgr::mvnpdfsmart_sleepy(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE))## utilisateur     syst√®me      √©coul√© \n##       1.608       0.123      13.157\nsystem.time(mypkgr::mvnpdfsmart_sleepy_par(x=matrix(1.96, nrow = 2, ncol = n), Log=FALSE))## utilisateur     syst√®me      √©coul√© \n##       0.731       0.008       5.164"},{"path":"r-code-parallelization.html","id":"conclusion","chapter":"6 R code Parallelization","heading":"6.5 Conclusion","text":"Parallel computation saves time, first optimize code. parallelizing code, gain execution time depends ratio communication time effective computation time task.","code":""},{"path":"take-home-messages.html","id":"take-home-messages","chapter":"7 Take-home message(s)","heading":"7 Take-home message(s)","text":"MAKE PACKAGES!MAKE PACKAGES!use git, least locally yourselfuse git, least locally yourselfif needed (.e.¬†optimization  code ), afraid using Rcpp /parallelizing codeif needed (.e.¬†optimization  code ), afraid using Rcpp /parallelizing code","code":""},{"path":"further-reading.html","id":"further-reading","chapter":"Further reading","heading":"Further reading","text":"Hadley Wickham‚Äôs online books truly excellent contain lot supplementary information covered training:\nwebsite writing packages R packages.\nwebsite Advanced R everything regarding optimization, Rcpp, parallel computing.\nwebsite R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.\nHadley Wickham‚Äôs online books truly excellent contain lot supplementary information covered training:website writing packages R packages.website writing packages R packages.website Advanced R everything regarding optimization, Rcpp, parallel computing.website Advanced R everything regarding optimization, Rcpp, parallel computing.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.website R Data Science also quite comprehensive includes chapters data management , also structures , modeling, well elements graphics Quarto.online book Rcpp everyone Masaki E. Tsuda also good.online book Rcpp everyone Masaki E. Tsuda also good.","code":""}]
